{"version":3,"sources":["lib/components/Annotator/components/DownloadAnnotations.js","lib/components/Annotator/components/IndexController.js","lib/functions/refNavigation.js","lib/components/Annotator/components/AnswerForms.js","lib/components/Annotator/components/QuestionForm.js","lib/functions/scroll.js","lib/components/Document/components/AnnotationEvents.js","lib/functions/tokenDesign.js","lib/components/Document/components/AnnotateNavigation.js","lib/components/Document/components/Meta.js","lib/components/Document/components/Tokens.js","lib/functions/annotations.js","lib/functions/codebook.js","lib/components/Document/components/ButtonSelection.js","lib/components/Document/components/useCodeSelector.js","lib/functions/tokens.js","lib/components/Document/components/useUnit.js","lib/functions/createDocuments.js","lib/components/Document/components/SelectVariable.js","lib/components/Document/Document.js","lib/components/Annotator/components/QuestionTask.js","lib/components/Annotator/components/AnnotateTable.js","lib/components/Annotator/components/AnnotateTask.js","lib/components/Annotator/components/Task.js","lib/components/Annotator/components/FullScreenWindow.js","lib/components/Annotator/Annotator.js","lib/classes/Backend.js","lib/components/AnnotatorAPIClient/useBackend.js","lib/classes/JobServerAPI.js","lib/components/AnnotatorAPIClient/JobsTable.js","lib/components/AnnotatorAPIClient/AnnotatorAPIClient.js","App.js","index.js"],"names":["formatAnnotateTaskResults","jobServer","setData","a","unitMap","units","reduce","obj","unit","unit_id","annotationsPerUnit","getAllAnnotations","results","unitAnnotations","annotations","annotation","result","document_id","provenance","push","formatQuestionsTaskResults","variables","codebook","questions","map","question","i","name","replace","offset","length","field","meta","Object","keys","key","variable","find","value","DownloadAnnotations","useState","data","useEffect","type","filename","title","set","coderName","style","cursor","Button","loading","primary","content","icon","labelPosition","size","IndexController","n","index","setIndex","canGoForward","canGoBack","reached","useRef","canMove","setLoading","activePage","setActivePage","delayedActivePage","setDelayedActivePage","Math","min","current","max","timer","setTimeout","clearTimeout","progress","Segment","display","border","boxShadow","padding","marginTop","leftMargin","width","maxHeight","borderRadius","Loader","active","Pagination","secondary","pageItem","firstItem","lastItem","prevItem","nextItem","siblingRange","boundaryRange","ellipsisItem","totalPages","onClick","e","d","stopPropagation","onPageChange","Number","fontSize","margin","flex","background","onChange","target","moveUp","arr","selected","xposition","currentPos","getPosition","ref","correctRow","prevColOverlap","nextPos","sameRow","colOverlap","calcColOverlap","left","right","moveDown","b","lowestTop","top","bottom","height","rightestLeft","leftestRight","pctA","pctB","horizontalRef","pos","getBoundingClientRect","hpos","x","arrowKeys","SearchBoxDropdown","React","memo","options","callback","blockEvents","Ref","innerRef","Dropdown","fluid","scrolling","upward","placeholder","searchInput","autoFocus","minWidth","option","code","text","tree","color","search","selection","compact","selectOnNavigation","minCharacters","autoComplete","ButtonSelection","setSelected","onKeydown","useCallback","event","nbuttons","includes","preventDefault","keyCode","window","removeEventListener","addEventListener","flexDirection","alignItems","maxWidth","flexWrap","justifyContent","backgroundColor","flexBasis","fontWeight","onMouseOver","Annotinder","swipeOptions","swipe","up","alignContent","disabled","Icon","DONE_COLOR","QuestionForm","tokens","questionIndex","setQuestionIndex","setUnitIndex","answerTransition","setAnswerTransition","answered","setAnnotations","prepareAnnotations","prepareQuestion","position","flexFlow","borderBottomLeftRadius","borderBottomRightRadius","paddingBottom","Header","as","currentAnswer","onSelect","answer","makes_irrelevant","updateAnnotations","processIrrelevantBranching","newQuestionIndex","status","postAnnotations","unitId","state","which","Set","makesIrrelevant","add","findIndex","q","has","createAnnotationObject","getCurrentAnswer","QuestionIndexStep","canSelect","setCanSelect","cs","newState","Group","setColor","textOverflow","overflow","AnswerSegment","overflowY","showCurrent","fields","lastToken","charspan","indexspan","unitStarted","unitEnded","token","codingUnit","length_tokens","length_paragraphs","paragraph","length_sentences","sentence","join","sameQuestion","y","annotationObject","newAnnotation","textAlign","preparedQuestion","codeTag","markedString","regex","RegExp","split","prev","string","keepInView","parent","child","parentBounding","clientBounding","parentTop","parentHeight","clientTop","needUp","scrollTop","arrowkeys","AnnotationEvents","currentToken","setCurrentToken","tokenSelection","setTokenSelection","triggerCodePopup","editMode","eventsBlocked","mover","setMover","HoldSpace","setHoldSpace","holdArrow","setHoldArrow","span","containerRef","scrollBehavior","delay","movePosition","counter","ceil","startposition","ntokens","KeyEvents","onKeyDown","onKeyUp","annotationFromSelection","repeat","MouseEvents","selectionStarted","tapped","touch","istouch","navigator","maxTouchPoints","msMaxTouchPoints","onMouseDown","onMouseMove","onMouseUp","onTouchDown","onTouchUp","onContextMenu","time","Date","getToken","rmTapped","currentNode","storeMouseSelection","updateSelection","annotated","addTapped","getSelection","empty","button","from","to","space","newPosition","moveAnnotation","moveToken","tokenRef","moveSentence","firstUnit","firstAfterUnit","lastIndexOf","nextAnnotation","classList","contains","prevAnnotation","allLeft","anyLeft","direction","getNode","getTokenAttributes","remove","originalTarget","path","touches","document","elementFromPoint","clientX","clientY","parentNode","className","tokenNode","parseInt","getAttribute","returnSelectionIfChanged","newSelection","getColor","annotationCode","codeMap","foldTo","foldToParent","standardizeColor","getColorGradient","colors","pct","floor","gradColors","str","ctx","createElement","getContext","fillStyle","trim","showAnnotations","variableMap","tokenAnnotations","allowedAnnotations","annotateToken","setTokenColor","id","activeParent","nLeft","nRight","pre","post","nAnnotations","allRight","anyRight","cl","textColor","preColor","postColor","children","showSelection","arrayIndex","AnnotationPopup","fullScreenNode","onlyFirst","setContent","refresh","setRefresh","list","List","Item","Popup","mountNode","undefined","context","basic","hoverable","open","AnnotateNavigation","disableAnnotations","triggerCodeSelector","formatValue","parse","Meta","visibleMetaFields","meta_fields","filter","mf","visible","cellStyle","row","borderTop","bold","italic","fontStyle","Table","lineHeight","paddingLeft","Row","Cell","label","Tokens","text_fields","setReady","setText","firstTextUnitToken","some","topToCenter","scrollToMiddle","renderText","field_name","paragraph_nr","sentence_nr","getLayout","tf","layout","renderSentence","renderParagraph","renderField","createRef","renderToken","paragraphs","justify","fontstyle","sentences","end","tokenindex","createId","importSpanAnnotations","annotationsArray","currentAnnotations","importedAnnotations","prepareSpanAnnotations","trackAnnotations","matchedAnnotations","findMatches","codeCounter","annArray","matchedAnnotation","addAnnotations","ann","toggleSpanAnnotation","rm","keep_empty","old","values","start","fieldAnnotations","codeBookEdgesToMap","codes","standardizedCodes","required_for","randomColor","seed","luminosity","standardizeCodes","totalChildren","totalActiveChildren","parentData","fillCodeTreeArray","parents","codeTreeArray","codeTrail","showColors","newcodeTrail","level","folded","reverse","allOptions","setAllOptions","deleted","cancel","ctrlKey","delete","tagColor","tagBorderColor","slice","borderColor","bgColor","tag","float","cancelButton","selectButtons","deleteButtons","marginBottom","mapButtons","CodeSelectorPopup","setOpen","popupMargin","bc","topSpace","innerHeight","bottomSpace","leftSpace","innerWidth","canIClose","wide","mouseLeaveDelay","onClose","SelectVariablePage","setVariable","variableColors","v","getOptions","SelectAnnotationPage","setSpan","onButtonSelection","variableSpans","getTextSnippet","getAnnotationOptions","NewCodePage","codeHistory","settings","setCodeHistory","textInputRef","focusOnButtons","setFocusOnButtons","searchBox","buttonMode","activeElement","click","multiple","existing","annMap","getExistingAnnotations","buttonOptions","dropdownOptions","nonEmpty","autoCode","nRecent","o","onSearchChange","searchQuery","asButtonSelection","maxlength","t","useCodeSelector","selectedVariable","setTokenRef","setTokenAnnotations","setEditMode","tmpCodeHistory","setTmpCodeHistory","fullVariableMap","setFullVariableMap","setVariableMap","vm","cm","vmap","popupPage1","triggerFunction","popupPage2","popup","nlp","extend","parseTokens","tokenIndex","has_unit_start","text_field","unit_start","context_before","unit_started","unit_ended","context_after","unit_end","tokenize","json","par","sent","sent2","term","terms","tokenobj","importTokens","last_paragraph","tokensColumnToRow","last_sentence","totalLength","alert","importTokenAnnotations","codeTracker","annotationDict","prevTokenPost","Array","isArray","columns","tokensArray","column","initializeCodeHistory","ch","useUnit","safetyCheck","returnTokens","preparedUnit","setPreparedUnit","concat","doc","importedTokens","n_paragraphs","n_sentences","prepareDocument","VariableButtons","variableNames","minHeight","attached","SelectVariable","editAll","useMemo","move","shiftKey","newIndex","helpText","variableObj","instruction","Document","onChangeAnnotations","returnVariableMap","tokensReady","setTokensReady","codeSelector","codeSelectorOpen","SpanAndText","un_ann","ann_obj","exportSpanAnnotations","documentSettings","centerVertical","QuestionTask","setTokens","setQuestions","refs","box","textReady","setTextReady","useCookies","cookies","setCookie","questionTaskSettings","splitHeight","textSize","setSettings","divref","JSON","stringify","prepareQuestions","transition","opacity","transform","setSwipe","textSwipe","useSwipeable","swipeControl","menuSwipe","SettingsPopup","on","trigger","Form","grouped","Field","Input","step","cta","object","getCodeTreeArray","addRequiredFor","haveRequired","s","rf","hasReq","alwaysDoVertical","triggerdist","transitionTime","swipeConfig","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","getDeltas","deltaX","deltaY","abs","el","getElementsByClassName","scrollHeight","clientHeight","onSwiping","bgc","talign","innerText","onSwiped","COLWIDTHS","annotationRows","rows","AnnotationRow","token_span","AnnotateTable","fixed","role","unstackable","singleLine","HeaderCell","Body","AnnotateTask","useAnnotations","annotateTaskSettings","Grid","centered","stackable","paddingTop","verticalAlign","Column","paddingRight","borderBottom","safeWrite","newAnnotations","cleanAnnotations","getCleanAnnotations","annotationsHaveChanged","compareOn","na","NextUnitButton","tempDisable","setTempDisable","onNext","UserManual","Modal","flowing","Content","Container","structured","colSpan","Footer","ListItem","Actions","positive","Task","console","log","renderTaskPreview","DOMNodeProvider","setFullScreenNode","AskFullScreenModal","handle","askFullscreen","setAskFullscreen","enter","exit","FullScreenButton","link","FullScreenWindow","fsHandle","useFullScreenHandle","fullScreenButton","getUnit","unitIndex","response","getWindowSize","Finished","container","Annotator","n_coded","n_total","seek_backwards","seek_forwards","passwordLogin","host","email","password","Axios","get","auth","username","Backend","this","api","create","baseURL","headers","Authorization","res","job_id","codingjobPackage","rules","logIn","setCookies","setBackend","backend","init","LoginForm","setLogout","setLogin","SignOut","SignIn","setHost","setEmail","setPassword","invalidPassword","setInvalidPassword","tryPasswordLogin","emailError","match","iconPosition","error","Divider","circular","vertical","useBackend","urlHost","JobServerAPI","where","getCodebook","getProgress","success","getNext","postAnnotation","f","FullDataTable","fullData","pages","setPages","newdata","pageChange","PaginationTable","createRowCells","rowObj","hide","toISOString","selectable","col","createHeaderRow","createBodyRows","floated","pointing","defaultActivePage","JobsTable","setJobId","jobs","setJobs","history","useHistory","isSubscribed","getJobs","then","started","j","modified","newjobs","JobOverview","loginForm","inverted","useJobServerBackend","jobId","setJobServer","js","useParseUrl","location","params","queries","part","decodeURIComponent","url","URL","origin","pathname","AnnotatorAPIClient","useLocation","urlJobId","App","basename","ReactDOM","render","StrictMode","CookiesProvider","querySelector"],"mappings":"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","file":"static/js/main.126bbcc3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CSVDownloader } from \"react-papaparse\";\nimport { Button } from \"semantic-ui-react\";\n\nconst DownloadAnnotations = ({ jobServer }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    switch (jobServer.codebook.type) {\n      case \"annotate\":\n        formatAnnotateTaskResults(jobServer, setData);\n        break;\n      case \"questions\":\n        formatQuestionsTaskResults(jobServer, setData);\n        break;\n      default:\n        return null;\n    }\n  }, [jobServer]);\n\n  return (\n    <CSVDownloader\n      filename={`CSSannotator_${jobServer.title}_${jobServer.set}_${jobServer.coderName}.json`}\n      data={data}\n      style={{ cursor: \"pointer\" }}\n    >\n      <Button\n        loading={data === null}\n        primary\n        content=\"Download results\"\n        icon=\"download\"\n        labelPosition=\"left\"\n        size=\"huge\"\n      />\n    </CSVDownloader>\n  );\n};\n\nconst formatAnnotateTaskResults = async (jobServer, setData) => {\n  // annotate results are returned in long format\n  const unitMap = jobServer.units.reduce((obj, unit) => {\n    obj[unit.unit_id] = unit;\n    return obj;\n  }, {});\n\n  const annotationsPerUnit = jobServer.getAllAnnotations(); // this needs to be replaced by a method of the jobServer\n\n  const results = [];\n  for (let unitAnnotations of annotationsPerUnit) {\n    const annotations = unitAnnotations.annotations;\n    const unit = unitMap[unitAnnotations.unit_id];\n    for (let annotation of annotations) {\n      const result = {\n        document_id: unit.document_id,\n        unit_id: unit.unit_id,\n        ...unit.provenance,\n        ...annotation,\n      };\n      results.push(result);\n    }\n  }\n  setData(results);\n};\n\nconst formatQuestionsTaskResults = async (jobServer, setData) => {\n  // questions results are returned in wide format\n  const results = [];\n\n  // variables of annotations are formatted as Q[question index]_[question name]\n  // question index starts at 1, and spaces in question name are replaced with underscores\n  const variables = jobServer.codebook.questions.map(\n    (question, i) => `Q${i + 1}_${question.name.replace(\" \", \"_\")}`\n  );\n\n  const unitMap = jobServer.units.reduce((obj, unit) => {\n    obj[unit.unit_id] = unit;\n    return obj;\n  }, {});\n\n  const annotationsPerUnit = jobServer.getAllAnnotations(); // The local jobserver needs this method\n\n  for (let unitAnnotations of annotationsPerUnit) {\n    const annotations = unitAnnotations.annotations;\n    const unit = unitMap[unitAnnotations.unit_id];\n    const result = {\n      document_id: unit.document_id,\n      unit_id: unit.unit_id,\n      ...unit.provenance,\n      offset: annotations[0].offset,\n      length: annotations[0].length,\n      field: annotations[0].field,\n      ...annotations[0].meta,\n    };\n\n    if (unit.meta) {\n      for (let key of Object.keys(unit.meta)) {\n        result[\"meta_\" + key] = unit.meta[key];\n      }\n    }\n\n    for (let variable of variables) {\n      const a = annotations.find((annotation) => annotation.variable === variable);\n      result[variable] = a == null ? null : a.value;\n    }\n    results.push(result);\n  }\n  setData(results);\n};\n\nexport default DownloadAnnotations;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Loader, Pagination, Segment } from \"semantic-ui-react\";\n\nconst IndexController = ({ n, index, setIndex, canGoForward = true, canGoBack = true }) => {\n  const reached = useRef(0); // if canGoBack but not canGoForward, can still go forward after going back\n  const canMove = useRef(false);\n\n  const [loading, setLoading] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n  const [delayedActivePage, setDelayedActivePage] = useState(1);\n\n  useEffect(() => {\n    if (index < 0) return;\n    if (index !== null) setActivePage(Math.min(index + 1, n + 1));\n    if (index === null) setActivePage(n + 1);\n  }, [index, n, setActivePage]);\n\n  useEffect(() => {\n    reached.current = 0;\n    canMove.current = false;\n  }, [n]);\n\n  useEffect(() => {\n    if (!n) return null;\n    setActivePage(1);\n    canMove.current = true;\n  }, [n, setActivePage]);\n\n  useEffect(() => {\n    if (!n) return null;\n    reached.current = Math.max(activePage, reached.current);\n    if (activePage - 1 === n) {\n      setIndex(null);\n    } else {\n      setIndex(activePage - 1);\n    }\n    setDelayedActivePage(activePage);\n  }, [n, setIndex, activePage]);\n\n  useEffect(() => {\n    if (!n) return null;\n    if (activePage === delayedActivePage) {\n      setLoading(false);\n      return null;\n    }\n    setLoading(true);\n    const timer = setTimeout(() => {\n      setActivePage(delayedActivePage);\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [activePage, delayedActivePage, n, setLoading]);\n\n  if (!n) return null;\n  const progress = (100 * Math.max(0, reached.current - 1)) / n;\n\n  return (\n    <Segment\n      style={{\n        display: \"flex\",\n        border: \"none\",\n        boxShadow: \"none\",\n        padding: \"0\",\n        marginTop: \"5px\",\n        leftMargin: \"0px\",\n        width: \"100%\",\n        maxHeight: \"35px\",\n        borderRadius: \"0\",\n      }}\n    >\n      <Loader active={loading} content=\"\" />\n      <Pagination\n        secondary\n        activePage={delayedActivePage}\n        pageItem={delayedActivePage <= n ? `${delayedActivePage} / ${n}` : `done / ${n}`}\n        size={\"mini\"}\n        firstItem={null}\n        lastItem={null}\n        prevItem={canGoBack ? \"back\" : \"   \"}\n        nextItem={canGoForward || activePage < reached.current ? \"next\" : \"   \"}\n        siblingRange={0}\n        boundaryRange={0}\n        ellipsisItem={null}\n        totalPages={n + 1}\n        onClick={(e, d) => e.stopPropagation()}\n        onPageChange={(e, d) => {\n          if ((canGoForward || activePage < reached.current) && Number(d.activePage) > activePage)\n            setActivePage(Number(d.activePage));\n          if (canGoBack && Number(d.activePage) < activePage) setActivePage(Number(d.activePage));\n        }}\n        style={{ fontSize: \"9px\", border: \"none\", boxShadow: \"none\", padding: 0, margin: 0 }}\n      />\n      <input\n        style={{\n          flex: \"1 1 auto\",\n          background: `linear-gradient(to right, #7dd48d ${progress}%, #fff ${progress}% 100%, #fff 100%)`,\n        }}\n        min={1}\n        max={n + 1}\n        onChange={(e) => {\n          if (Number(e.target.value) > delayedActivePage) {\n            if (canGoForward) {\n              setDelayedActivePage(Number(e.target.value));\n            } else {\n              setDelayedActivePage(Math.min(reached.current, Number(e.target.value)));\n            }\n          }\n          if (canGoBack && Number(e.target.value) < delayedActivePage)\n            setDelayedActivePage(Number(e.target.value));\n        }}\n        type=\"range\"\n        value={delayedActivePage}\n      />\n    </Segment>\n  );\n};\n\nexport default IndexController;\n","/**\n *\n * @param {*} arr An array of objects that each has a .ref key\n * @param {*} selected\n */\nexport const moveUp = (arr, selected, xposition = null) => {\n  // given an array of refs for buttons (or any divs), and the current selected button,\n  // move to most overlapping button on previous row\n  // (basically, what you want to happen when you press 'up' in a grid of buttons)\n  const currentPos = getPosition(arr[selected].ref, arr?.[xposition]?.ref);\n  let correctRow = null;\n  let prevColOverlap = 0;\n  for (let i = selected - 1; i >= 0; i--) {\n    if (arr[i].ref == null || arr[i].ref.current === null) return i + 1;\n    const nextPos = getPosition(arr[i].ref);\n    if (nextPos === null) return;\n\n    if (correctRow === null) {\n      if (sameRow(currentPos, nextPos)) continue;\n      correctRow = nextPos; // set correct row once we reach a button on the next row\n    } else {\n      if (!sameRow(correctRow, nextPos)) return i + 1;\n    }\n\n    const colOverlap = calcColOverlap(currentPos, nextPos);\n    //if (colOverlap > 0.5) return i;\n    if (prevColOverlap > 0 && colOverlap < prevColOverlap) return i + 1;\n    if (currentPos.left > nextPos.right) return i;\n\n    prevColOverlap = colOverlap;\n  }\n\n  return 0;\n};\n\n/**\n *\n * @param {*} arr An array of objects that each has a .ref key\n * @param {*} selected\n */\nexport const moveDown = (arr, selected, xposition = null) => {\n  // like moveUp, but down\n  const currentPos = getPosition(arr[selected].ref, arr?.[xposition]?.ref);\n  let correctRow = null;\n  let prevColOverlap = 0;\n  for (let i = selected + 1; i < arr.length; i++) {\n    if (arr[i].ref == null || arr[i].ref.current === null) return i - 1;\n    const nextPos = getPosition(arr[i].ref);\n    if (nextPos === null) return;\n\n    if (correctRow === null) {\n      if (sameRow(currentPos, nextPos)) continue;\n      correctRow = nextPos; // set correct row once we reach a button on the next row\n    } else {\n      if (!sameRow(correctRow, nextPos)) return i - 1;\n    }\n\n    const colOverlap = calcColOverlap(currentPos, nextPos);\n    //if (colOverlap > 0.5) return i;\n    if (prevColOverlap > 0 && colOverlap < prevColOverlap) return i - 1;\n    if (currentPos.right < nextPos.left) return i;\n    prevColOverlap = colOverlap;\n  }\n\n  return arr.length - 1;\n};\n\nconst sameRow = (a, b) => {\n  // we can't just check if y positions are the same, because they fool around a bit\n  // so instead we look at how much buttons overlap on the y axis\n\n  const lowestTop = Math.max(a.top, b.top); // lowest top of two buttons on screen\n  const highestBottom = Math.min(a.bottom, b.bottom); // highest bottom of two buttons on screen\n\n  const overlap = highestBottom - lowestTop;\n  // if buttons overlap more than 50% of height of box a, say they overlap\n  // (really, boxes on the same row will overlap > 99%, so this is very safe)\n  return overlap > 0.5 * a.height;\n};\n\nconst calcColOverlap = (a, b) => {\n  const rightestLeft = Math.max(a.left, b.left);\n  const leftestRight = Math.min(a.right, b.right);\n\n  const pctA = (leftestRight - rightestLeft) / a.width;\n  const pctB = (leftestRight - rightestLeft) / b.width;\n  return Math.max(pctA, pctB);\n};\n\nconst getPosition = (ref, horizontalRef) => {\n  if (!ref?.current) return null;\n  const pos = ref.current.getBoundingClientRect();\n\n  if (horizontalRef != null) {\n    const hpos = horizontalRef.current.getBoundingClientRect();\n    pos.x = hpos.x;\n    pos.width = hpos.width;\n  }\n  return pos;\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Dropdown, Ref, Icon } from \"semantic-ui-react\";\nimport { moveUp, moveDown } from \"../../../functions/refNavigation\";\n\nconst arrowKeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\nexport const SearchBoxDropdown = React.memo(({ options, callback, blockEvents }) => {\n  const ref = useRef();\n\n  return (\n    <Ref innerRef={ref}>\n      <Dropdown\n        fluid\n        scrolling\n        upward={false}\n        placeholder={\"<type to search>\"}\n        searchInput={{ autoFocus: !blockEvents }}\n        style={{ minWidth: \"12em\" }}\n        options={options.map((option) => {\n          return {\n            key: option.code,\n            value: option,\n            text: option.code + (option.tree ? \" (\" + option.tree + \")\" : \"\"),\n            content: (\n              <>\n                {option.code}\n                <br />\n                <span style={{ color: \"grey\" }}>{option.tree}</span>\n              </>\n            ),\n          };\n        })}\n        search\n        selection\n        compact\n        selectOnNavigation={false}\n        minCharacters={0}\n        autoComplete={\"on\"}\n        onChange={(e, d) => {\n          callback(d.value);\n        }}\n      />\n    </Ref>\n  );\n});\n\nexport const ButtonSelection = React.memo(({ options, callback, blockEvents }) => {\n  // render buttons for options (an array of objects with keys 'label' and 'color')\n  // On selection perform callback function with the button label as input\n  // if canDelete is TRUE, also contains a delete button, which passes null to callback\n  const [selected, setSelected] = useState(0);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      const nbuttons = options.length;\n\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") {\n          if (selected < nbuttons - 1) setSelected(selected + 1);\n        }\n\n        if (event.key === \"ArrowDown\") {\n          setSelected(moveDown(options, selected));\n        }\n\n        if (event.key === \"ArrowLeft\") {\n          if (selected > 0) setSelected(selected - 1);\n        }\n\n        if (event.key === \"ArrowUp\") {\n          setSelected(moveUp(options, selected));\n        }\n\n        return;\n      }\n\n      // delete\n      if (event.keyCode === 46) {\n        callback(null);\n        setSelected(0);\n      }\n\n      // space or enter\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (selected === options.length) {\n          callback(null); // this means delete button was selected\n        } else {\n          callback(options[selected]);\n        }\n        setSelected(0);\n      }\n    },\n    [selected, callback, options]\n  );\n\n  useEffect(() => {\n    if (!blockEvents) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else window.removeEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [onKeydown, blockEvents]);\n\n  const mapButtons = () => {\n    return options.map((option, i) => {\n      return (\n        <>\n          <Ref innerRef={option.ref}>\n            <Button\n              style={{\n                backgroundColor: option.color,\n                padding: \"1em\",\n                margin: \"0.2em\",\n                flex: \"0.5 1 0\",\n                flexBasis: \"0\",\n                fontWeight: \"bold\",\n                fontSize: \"1em\",\n                border: i === selected ? \"3px solid black\" : \"3px solid #ece9e9\",\n              }}\n              key={option.code}\n              value={option}\n              compact\n              onMouseOver={() => setSelected(i)}\n              onClick={(e, d) => {\n                callback(d.value);\n                setSelected(0);\n              }}\n            >\n              {option.code}\n            </Button>\n          </Ref>\n        </>\n      );\n    });\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        //alignItems: \"stretch\",\n        alignItems: \"space-eventy\",\n        maxWidth: \"100%\",\n        height: \"100%\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      {mapButtons()}\n    </div>\n  );\n});\n\nexport const Annotinder = React.memo(({ swipeOptions, callback, swipe, blockEvents }) => {\n  // const left = options.find(option => option.swipe === \"left\");\n  // const up = options.find(option => option.swipe === \"up\");\n  // const right = options.find(option => option.swipe === \"right\");\n\n  useEffect(() => {\n    if (swipe) {\n      if (swipe === \"right\") callback(swipeOptions.right);\n      if (swipe === \"up\") callback(swipeOptions.up);\n      if (swipe === \"left\") callback(swipeOptions.left);\n    }\n  }, [swipe, callback, swipeOptions]);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") callback(swipeOptions.right);\n        if (event.key === \"ArrowUp\") callback(swipeOptions.up);\n        if (event.key === \"ArrowLeft\") callback(swipeOptions.left);\n      }\n    },\n\n    [callback, swipeOptions]\n  );\n\n  useEffect(() => {\n    if (!blockEvents) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else window.removeEventListener(\"keydown\", onKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [onKeydown, blockEvents]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignContent: \"stretch\",\n\n        height: \"100%\",\n      }}\n    >\n      {swipeOptions.up == null ? null : (\n        <Button\n          fluid\n          disabled={swipeOptions.up == null}\n          onClick={(e, d) => callback(swipeOptions.up)}\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            flex: \"1 1 auto\",\n            borderRadius: \"0\",\n            border: \"1px solid\",\n            background: swipeOptions.up?.color || \"white\",\n          }}\n        >\n          <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n            <Icon name={swipeOptions.up?.code ? \"arrow up\" : null} />\n            <span>{swipeOptions.up?.code || \"\"}</span>\n          </div>\n        </Button>\n      )}\n      <div style={{ flex: \"1 1 auto\" }}>\n        <div\n          style={{\n            padding: \"0\",\n            margin: \"0\",\n            display: \"flex\",\n            height: \"100%\",\n            flexWrap: \"wrap\",\n            alignContent: \"stretch\",\n          }}\n        >\n          <Button\n            disabled={swipeOptions.left == null}\n            onClick={(e, d) => callback(swipeOptions.left)}\n            style={{\n              margin: \"0\",\n              padding: \"0\",\n              flex: \"1 1 auto\",\n              width: \"45%\",\n              borderRadius: \"0\",\n              border: \"1px solid\",\n              background: swipeOptions.left?.color || \"white\",\n            }}\n          >\n            <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n              <Icon name={swipeOptions.left?.code ? \"arrow left\" : null} />\n              <span>{swipeOptions.left?.code || \"\"}</span>\n            </div>\n          </Button>\n          <Button\n            disabled={swipeOptions.right == null}\n            onClick={(e, d) => callback(swipeOptions.right)}\n            style={{\n              padding: \"0\",\n              margin: \"0\",\n              flex: \"1 1 auto\",\n              width: \"45%\",\n              borderRadius: \"0\",\n              border: \"1px solid\",\n              background: swipeOptions.right?.color || \"white\",\n            }}\n          >\n            <div style={{ color: \"black\", fontWeight: \"bold\", fontSize: \"1em\" }}>\n              <span>{swipeOptions.right?.code || \"\"}</span>\n              <Icon name={swipeOptions.right?.code ? \"arrow right\" : null} />\n            </div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Header, Button, Segment } from \"semantic-ui-react\";\nimport { SearchBoxDropdown, ButtonSelection, Annotinder } from \"./AnswerForms\";\n\nconst DONE_COLOR = \"lightgreen\";\nconst IRRELEVANT_COLOR = \"red\";\n\nconst QuestionForm = ({\n  unit,\n  tokens,\n  questions,\n  questionIndex,\n  setQuestionIndex,\n  setUnitIndex,\n  swipe,\n  blockEvents,\n}) => {\n  const [answerTransition, setAnswerTransition] = useState();\n  const answered = useRef(false); // to prevent answering double (e.g. with swipe events)\n  const [annotations, setAnnotations] = useState(null);\n\n  useEffect(() => {\n    if (!questions) return;\n    prepareAnnotations(unit, tokens, questions, setAnnotations);\n    answered.current = false;\n  }, [unit, tokens, setAnnotations, questions]);\n\n  if (!questions || !unit || !annotations) return null;\n  if (!questions?.[questionIndex]) {\n    setQuestionIndex(0);\n    return null;\n  }\n\n  const question = prepareQuestion(unit, questions[questionIndex]);\n\n  const onSelect = (answer) => {\n    // write result to IDB/server and skip to next question or next unit\n    if (answered.current) return null;\n    answered.current = true;\n\n    annotations[questionIndex].value = answer.code;\n    annotations[questionIndex].makes_irrelevant = answer.makes_irrelevant;\n    unit.annotations = updateAnnotations(annotations[questionIndex], unit.annotations);\n    processIrrelevantBranching(unit, questions, annotations, questionIndex);\n\n    // next (non-irrelevant) question in unit (null if no remaining)\n    let newQuestionIndex = null;\n    for (let i = questionIndex + 1; i < questions.length; i++) {\n      if (annotations[i].value === \"IRRELEVANT\") continue;\n      newQuestionIndex = i;\n      break;\n    }\n\n    const status = newQuestionIndex === null ? \"DONE\" : \"IN_PROGRESS\";\n    unit.jobServer.postAnnotations(unit.unitId, unit.annotations, status);\n\n    setAnswerTransition(answer); // show given answer\n    setTimeout(() => {\n      // wait a little bit, so coder can see their answer and breathe\n      setAnswerTransition(null);\n\n      // if none remain, go to next unit\n      if (newQuestionIndex === null) {\n        setUnitIndex((state) => state + 1);\n        setQuestionIndex(0);\n      } else {\n        setQuestionIndex(newQuestionIndex);\n      }\n\n      answered.current = false;\n    }, 250);\n  };\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\" }}>\n      <QuestionIndexStep\n        questions={questions}\n        questionIndex={questionIndex}\n        annotations={annotations}\n        setQuestionIndex={setQuestionIndex}\n      />\n\n      <div\n        style={{\n          display: \"flex\",\n          position: \"relative\",\n          flexFlow: \"column\",\n          height: \"calc(100% - 30px)\",\n          width: \"100%\",\n          maxHeight: \"100%\",\n          padding: \"10px\",\n          color: \"white\",\n          borderBottomLeftRadius: \"30px\",\n          borderBottomRightRadius: \"30px\",\n          backgroundColor: \"#1B1C1D\",\n        }}\n      >\n        <div style={{ width: \"100%\", flex: \"1 1 auto\", paddingBottom: \"10px\" }}>\n          <Header as=\"h3\" style={{ color: \"white\" }}>\n            {question}\n          </Header>\n        </div>\n        <AnswerSegment\n          answerTransition={answerTransition}\n          currentAnswer={annotations?.[questionIndex]?.value}\n          questions={questions}\n          questionIndex={questionIndex}\n          onSelect={onSelect}\n          swipe={swipe}\n          blockEvents={blockEvents}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst processIrrelevantBranching = (unit, questions, annotations, questionIndex) => {\n  // checks all the branching in the given answers\n  const which = new Set();\n  for (let a in Object.keys(unit.annotations)) {\n    const makesIrrelevant = unit.annotations[a].makes_irrelevant;\n    if (makesIrrelevant == null || makesIrrelevant === null) continue;\n    for (let value of makesIrrelevant) {\n      if (value === \"REMAINING\") {\n        for (let i = questionIndex + 1; i < annotations.length; i++) which.add(i);\n      }\n      const i = questions.findIndex((q) => q.name === value);\n      if (i >= 0) which.add(i);\n    }\n  }\n\n  for (let i = 0; i < annotations.length; i++) {\n    if (which.has(i)) {\n      // gives the value \"IRRELEVANT\" to targeted questions\n      annotations[i].value = \"IRRELEVANT\";\n      unit.annotations = updateAnnotations(annotations[i], unit.annotations);\n    } else {\n      // this happens if a coders goes back and changes all answers that marked a question as \"IRRELEVANT\"\n      if (annotations[i].value === \"IRRELEVANT\") {\n        delete annotations[i].value;\n        unit.annotations = updateAnnotations(annotations[i], unit.annotations);\n      }\n    }\n  }\n};\n\nconst prepareAnnotations = (unit, tokens, questions, setAnnotations) => {\n  // create a list with annotations for each question, and see if they have been answered yet\n  if (tokens.length === 0) return null;\n  const annotations = [];\n  if (!unit.annotations) unit.annotations = [];\n  for (let i = 0; i < questions.length; i++) {\n    const annotation = createAnnotationObject(tokens, questions[i], i);\n    annotation.value = getCurrentAnswer(unit.annotations, annotation);\n    annotations.push(annotation);\n  }\n  setAnnotations(annotations);\n};\n\nconst QuestionIndexStep = ({ questions, questionIndex, annotations, setQuestionIndex }) => {\n  //if (questions.length === 1) return null;\n  const [canSelect, setCanSelect] = useState();\n\n  useEffect(() => {\n    const cs = annotations.map((a) => a.value !== null);\n    cs[0] = true;\n    setCanSelect(cs);\n  }, [annotations, setCanSelect]);\n\n  useEffect(() => {\n    setCanSelect((state) => {\n      const newState = [...state];\n      newState[questionIndex] = true;\n      return newState;\n    });\n  }, [questionIndex, setCanSelect]);\n\n  const setColor = (i) => {\n    if (!annotations[i]) return [\"black\", IRRELEVANT_COLOR];\n    if (annotations[i].value === \"IRRELEVANT\") return [\"black\", IRRELEVANT_COLOR];\n    if (canSelect && i > questionIndex && !canSelect[i]) return [\"white\", \"grey\"];\n    if (annotations[i].value) return [\"black\", DONE_COLOR];\n    if (i === 0) return [DONE_COLOR, \"#1B1C1D\"];\n    if (canSelect && canSelect[i]) return [DONE_COLOR, \"#1B1C1D\"];\n    return [DONE_COLOR, \"grey\"];\n  };\n\n  return (\n    <div>\n      <Button.Group\n        fluid\n        style={{\n          border: \"1px solid\",\n          height: \"30px\",\n        }}\n      >\n        {questions.map((q, i) => {\n          const [color, background] = setColor(i);\n          return (\n            <Button\n              active={i === questionIndex}\n              style={{\n                padding: \"0em 0.2em 0.2em 0.2em\",\n\n                minWidth: \"2em\",\n                height: \"30px\",\n                borderRadius: \"0\",\n                fontSize: \"12px\",\n                border: \"1px solid darkgrey\",\n                background: background,\n                textOverflow: \"clip\",\n                overflow: \"hidden\",\n                color: color,\n              }}\n              onClick={() => {\n                if (canSelect[i]) {\n                  setQuestionIndex(i);\n                }\n              }}\n            >\n              {/* {i + 1} */}\n              <span title={questions[i].name}>{questions[i].name}</span>\n            </Button>\n          );\n        })}\n      </Button.Group>\n    </div>\n  );\n};\n\nconst AnswerSegment = ({\n  answerTransition,\n  currentAnswer,\n  questions,\n  questionIndex,\n  onSelect,\n  swipe,\n  blockEvents,\n}) => {\n  if (answerTransition)\n    return (\n      <Segment\n        style={{\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          padding: \"0\",\n          overflowY: \"auto\",\n          height: \"100%\",\n          width: \"100%\",\n          margin: \"0\",\n\n          background: answerTransition.color,\n\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Header as=\"h1\">{answerTransition.code}</Header>\n      </Segment>\n    );\n  return (\n    <>\n      {showCurrent(currentAnswer || answerTransition)}\n      <Segment\n        style={{\n          flex: \"1 1 auto\",\n          padding: \"0\",\n          overflowY: \"auto\",\n          height: \"100%\",\n          width: \"100%\",\n          borderBottomLeftRadius: \"10px\",\n          borderBottomRightRadius: \"10px\",\n          margin: \"0\",\n        }}\n      >\n        {questions[questionIndex].type === \"search code\" ? (\n          <SearchBoxDropdown\n            options={questions[questionIndex].options}\n            callback={onSelect}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n        {questions[questionIndex].type === \"select code\" ? (\n          <ButtonSelection\n            options={questions[questionIndex].options}\n            callback={onSelect}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n        {questions[questionIndex].type === \"annotinder\" ? (\n          <Annotinder\n            swipeOptions={questions[questionIndex].swipeOptions}\n            currentAnswer={currentAnswer}\n            callback={onSelect}\n            swipe={swipe}\n            blockEvents={blockEvents}\n          />\n        ) : null}\n      </Segment>\n    </>\n  );\n};\n\nconst createAnnotationObject = (tokens, question, questionIndex) => {\n  // creates an object with all information about the annotation except for the\n  // value. This lets us check whether the annotations already exists, and add\n  // or change the value.\n  if (tokens.length === 0) return null;\n\n  const fields = {};\n  const lastToken = tokens[tokens.length - 1];\n\n  const charspan = [0, lastToken.offset + lastToken.length];\n  const indexspan = [0, tokens.length - 1];\n  let [unitStarted, unitEnded] = [false, false];\n\n  let i = 0;\n  for (let token of tokens) {\n    if (token.codingUnit && !fields[token.field]) fields[token.field] = 1;\n    if (!unitStarted && token.codingUnit) {\n      unitStarted = true;\n      charspan[0] = token.offset;\n      indexspan[0] = i;\n    }\n    if (!unitEnded && !token.codingUnit && unitStarted) {\n      unitEnded = true;\n      charspan[1] = tokens[i - 1].offset + tokens[i - 1].length;\n      indexspan[1] = i - 1;\n    }\n    i++;\n  }\n\n  // make these optional? Because they're not tokenizer agnostic\n  const meta = {\n    length_tokens: 1 + indexspan[1] - indexspan[0],\n    length_paragraphs: 1 + tokens[indexspan[1]].paragraph - tokens[indexspan[0]].paragraph,\n    length_sentences: 1 + tokens[indexspan[1]].sentence - tokens[indexspan[0]].sentence,\n  };\n\n  return {\n    variable: `Q${questionIndex + 1}_${question.name.replace(\" \", \"_\")}`,\n    value: null,\n    field: Object.keys(fields).join(\" + \"),\n    offset: charspan[0],\n    length: charspan[1] - charspan[0],\n    meta,\n  };\n};\n\nconst sameQuestion = (x, y) => {\n  return (\n    x.variable === y.variable &&\n    x.field === y.field &&\n    x.offset === y.offset &&\n    x.length === y.length\n  );\n};\n\nconst getCurrentAnswer = (annotations, annotationObject) => {\n  if (!annotations) return null;\n  for (let annotation of annotations) {\n    if (sameQuestion(annotation, annotationObject)) return annotation.value;\n  }\n  return null;\n};\n\nconst updateAnnotations = (newAnnotation, annotations) => {\n  if (!annotations) annotations = [];\n  for (let i = 0; i < annotations.length; i++) {\n    if (sameQuestion(annotations[i], newAnnotation)) {\n      annotations[i] = newAnnotation;\n      return annotations;\n    }\n  }\n  annotations.push(newAnnotation);\n  return annotations;\n};\n\nconst showCurrent = (currentAnswer) => {\n  if (currentAnswer == null) return null;\n  return (\n    <div style={{ backgroundColor: \"white\", color: \"black\" }}>\n      <Segment\n        style={{\n          padding: \"0 0 0.5em 0\",\n          margin: \"0\",\n          borderRadius: \"0\",\n          background: \"#1B1C1D\",\n          color: DONE_COLOR,\n          textAlign: \"center\",\n        }}\n      >\n        <div style={{ marginTop: \"0.3em\" }}>\n          you answered:{\"  \"}\n          <b style={{ fontSize: \"1.5em\" }}>{`${currentAnswer}`}</b>\n        </div>\n      </Segment>\n    </div>\n  );\n};\n\nconst prepareQuestion = (unit, question) => {\n  let preparedQuestion = question.question;\n  if (!unit.variables) return;\n\n  for (let variable of Object.keys(unit.variables)) {\n    if (preparedQuestion.search(`\\\\[${variable}\\\\]`) >= 0) {\n      let code = unit.variables[variable];\n      const codeTag = `{{lightyellow###${code}}}`; // add optional color from itemquestions\n      preparedQuestion = preparedQuestion.replace(`[${variable}]`, codeTag);\n    }\n  }\n\n  return markedString(preparedQuestion);\n};\n\nconst markedString = (text) => {\n  const regex = new RegExp(/{{(.*?)}}/); // Match text inside two square brackets\n\n  text = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  return (\n    <div>\n      {text.split(regex).reduce((prev, current, i) => {\n        if (i % 2 === 0) {\n          prev.push(current);\n        } else {\n          const [color, string] = current.split(\"###\");\n          prev.push(\n            <mark key={i + current} style={{ backgroundColor: color }}>\n              {string}\n            </mark>\n          );\n        }\n        return prev;\n      }, [])}\n    </div>\n  );\n};\n\nexport default React.memo(QuestionForm);\n","// custom scrollintoview\n\nexport const scrollToMiddle = (parent, child, position) => {\n  // scroll parent to position of child\n  // position should be value between 0 and 1 for relative position between top (0) and bottom (1)\n  const parentBounding = parent.getBoundingClientRect();\n  const clientBounding = child.getBoundingClientRect();\n\n  const parentTop = parentBounding.top;\n  const parentHeight = parentBounding.height;\n  const clientTop = clientBounding.top;\n  const topToCenter = parentHeight / (1 / position); // position 1/4 down from top\n\n  parent.scrollTop = parent.scrollTop + clientTop - (topToCenter + parentTop);\n};\n\nexport const keepInView = (parent, child) => {\n  // scroll parent to position of child\n  // position should be value between 0 and 1 for relative position between top (0) and bottom (1)\n  const parentBounding = parent.getBoundingClientRect();\n  const clientBounding = child.getBoundingClientRect();\n\n  const parentTop = parentBounding.top;\n  const parentHeight = parentBounding.height;\n  const clientTop = clientBounding.top;\n\n  const needUp = clientTop - parentTop < 50;\n  const needDown = clientTop > parentTop + parentHeight * 0.9;\n\n  //if (needUp > 0) parent.scrollTop = parent.scrollTop + needUp;\n  if (needDown) {\n    parent.scrollTop = parent.scrollTop + clientTop - (parentHeight * 0.9 + parentTop);\n  }\n  if (needUp) {\n    parent.scrollTop = parent.scrollTop + clientTop - (parentHeight * 0.1 + parentTop);\n  }\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { keepInView } from \"../../../functions/scroll\";\nimport { moveUp, moveDown } from \"../../../functions/refNavigation\";\n\n// This component generates no content, but manages navigation for span level annotations\n\nconst arrowkeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\n/**\n * This is a hugely elaborate component for managing navigation (key, mouse and touch events)\n * It doesn't acctually render anything, but its shaped as a component because useEffect is just really convenient here\n * You probably never want to read this. And if you do, don't expect my sympathies. Rather, just blame me\n * if anything in here breaks, or ask nicely if we need more features\n */\nexport const AnnotationEvents = ({\n  tokens,\n  annotations,\n  currentToken,\n  setCurrentToken,\n  tokenSelection,\n  setTokenSelection,\n  triggerCodePopup,\n  editMode,\n  eventsBlocked,\n}) => {\n  // !! Keep in mind that positions are based on token.arrayIndex, not token.index\n  // arrayIndex is the actual tokens array, where token.index is the position of the token in the document\n  // (these can be different if the text/context does not start at token.index 0)\n\n  const [mover, setMover] = useState(null);\n  const [HoldSpace, setHoldSpace] = useState(false);\n  const [holdArrow, setHoldArrow] = useState(null);\n\n  useEffect(() => {\n    if (eventsBlocked) {\n      setHoldArrow(false);\n      setHoldSpace(false);\n    } else {\n      //setTokenSelection((state) => (state.length === 0 ? state : []));\n    }\n  }, [setHoldArrow, setHoldSpace, eventsBlocked, setTokenSelection]);\n\n  // this adds a function to each token to select and navigate to a token (or span)\n  // this can be accessed outside of Document (via returnTokens)\n  useEffect(() => {\n    if (!tokens) return;\n    for (let token of tokens)\n      token.triggerCodePopup = (span) => {\n        if (!span) span = [token.index, token.index];\n        if (token?.containerRef?.current && token?.ref?.current) {\n          token.containerRef.current.style.scrollBehavior = \"smooth\";\n          keepInView(token.containerRef.current, token.ref.current);\n        }\n        setCurrentToken({ i: token.index });\n        setTokenSelection(span);\n      };\n  }, [tokens, setCurrentToken, setTokenSelection]);\n\n  useEffect(() => {\n    // When arrow key is held, walk through tokens with increasing speed\n    // this loops itself by updating mover (an object with position information)\n    // this is like setIntervall, but allows custom time intervalls,\n    if (!mover || !holdArrow || !tokens?.[0]?.containerRef?.current) return;\n\n    let position = movePosition(\n      tokens,\n      annotations,\n      holdArrow,\n      mover,\n      HoldSpace,\n      editMode,\n      setCurrentToken,\n      setTokenSelection\n    );\n\n    let delay;\n    if (mover.counter === 1) {\n      tokens[0].containerRef.current.style.scrollBehavior = \"smooth\";\n      delay = 150;\n    } else {\n      tokens[0].containerRef.current.style.scrollBehavior = \"auto\";\n      delay = Math.max(5, 100 / Math.ceil(mover.counter / 5));\n    }\n    setTimeout(() => {\n      setMover({\n        position: position,\n        startposition: mover.startposition,\n        ntokens: mover.ntokens,\n        counter: mover.counter + 1,\n      });\n    }, delay);\n  }, [\n    tokens,\n    mover,\n    holdArrow,\n    HoldSpace,\n    setCurrentToken,\n    editMode,\n    annotations,\n    setTokenSelection,\n  ]);\n\n  if (!tokens || tokens.length === 0) return null;\n\n  // this prevents rendering the components that manage the key and mouse events\n  if (eventsBlocked) return null;\n\n  return (\n    <>\n      <KeyEvents\n        tokenSelection={tokenSelection}\n        currentToken={currentToken}\n        tokens={tokens}\n        HoldSpace={HoldSpace}\n        setMover={setMover}\n        setHoldSpace={setHoldSpace}\n        setHoldArrow={setHoldArrow}\n        triggerCodePopup={triggerCodePopup}\n        editMode={editMode}\n      />\n      <MouseEvents\n        tokenSelection={tokenSelection}\n        tokens={tokens}\n        setCurrentToken={setCurrentToken}\n        setTokenSelection={setTokenSelection}\n        triggerCodePopup={triggerCodePopup}\n        editMode={editMode}\n      />\n    </>\n  );\n};\n\nconst KeyEvents = ({\n  tokenSelection,\n  currentToken,\n  tokens,\n  HoldSpace,\n  setMover,\n  setHoldSpace,\n  setHoldArrow,\n  triggerCodePopup,\n  editMode,\n}) => {\n  // This blocks event listeners when the eventsBlocked state (in redux) is true.\n  // This lets us block the key activities in the text (selecting tokens) when\n  // the CodeSelector popup is open\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      window.removeEventListener(\"keyup\", onKeyUp);\n    };\n  });\n\n  // (see useEffect with 'eventsBlocked' for details on useCallback)\n  const onKeyUp = (event) => {\n    // keep track of which buttons are pressed in the state\n    if (event.keyCode === 32 && HoldSpace) {\n      setHoldSpace(false);\n      if (tokenSelection.length > 0) {\n        annotationFromSelection(tokens, tokenSelection, triggerCodePopup);\n      }\n      return;\n    }\n    if (arrowkeys.includes(event.key)) {\n      setHoldArrow(false);\n      setMover(null);\n    }\n  };\n\n  // (see useEffect with 'eventsBlocked' for details on useCallback)\n  const onKeyDown = (event) => {\n    // key presses, and key holding (see onKeyUp)\n    if (event.keyCode === 32) {\n      event.preventDefault();\n      if (event.repeat) return;\n      setHoldSpace(true);\n      return;\n    }\n    if (arrowkeys.includes(event.key)) {\n      event.preventDefault();\n      if (event.repeat) return;\n      setMover({\n        position: currentToken.i,\n        startposition: currentToken.i,\n        ntokens: tokens.length,\n        counter: 1,\n      });\n      setHoldArrow(event.key);\n    }\n\n    // if (tokenSelection.length > 0) {\n    //   if (tokenSelection[0] === tokenSelection[1]) {\n    //     // enter key\n    //     if (event.keyCode === 13) {\n    //       triggerCodePopup(tokens[tokenSelection[0]].index, null, null);\n    //     }\n    //   }\n    // }\n  };\n\n  return <></>;\n};\n\nconst MouseEvents = ({\n  tokenSelection,\n  tokens,\n  setCurrentToken,\n  setTokenSelection,\n  triggerCodePopup,\n  editMode,\n}) => {\n  const selectionStarted = useRef(false);\n  const tapped = useRef(null);\n  const touch = useRef(null);\n  const istouch = useRef(\n    \"ontouchstart\" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0\n  ); // hack to notice if device uses touch (because single touch somehow triggers mouseup)\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"touchstart\", onTouchDown);\n    window.addEventListener(\"touchend\", onTouchUp);\n    window.addEventListener(\"contextmenu\", onContextMenu);\n    return () => {\n      window.removeEventListener(\"mousedown\", onMouseDown);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"touchstart\", onTouchDown);\n      window.removeEventListener(\"touchend\", onTouchUp);\n      window.removeEventListener(\"contextmenu\", onContextMenu);\n    };\n  });\n\n  const onTouchDown = (event) => {\n    // store token from touch down, but process on touch up, so that we cna set a max\n    // time passed (to ignore holding touch when scrolling)\n    touch.current = { time: new Date(), token: getToken(tokens, event) };\n  };\n\n  const onTouchUp = (e) => {\n    if (!touch.current?.time) return;\n    const now = new Date();\n    const timepassed = now - touch.current.time;\n    if (timepassed > 150) return;\n    const token = touch.current.token;\n\n    if (token?.index === null) {\n      rmTapped(tokens, tapped.current);\n      tapped.current = null;\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n      return;\n    }\n\n    if (editMode) {\n      annotationFromSelection(tokens, [token.index, token.index], triggerCodePopup);\n      return;\n    }\n\n    // first check if there is a tokenselection (after double tab). If so, this completes the selection\n    if (tokenSelection.length > 0 && tokenSelection[0] === tapped.current) {\n      // if a single token, and an annotation already exists, open create/edit mode\n      const currentNode = storeMouseSelection(token);\n      setTokenSelection((state) => updateSelection(state, tokens, currentNode, true));\n\n      if (token?.annotated && currentNode === tokenSelection[0]) {\n        annotationFromSelection(tokens, [currentNode, currentNode], triggerCodePopup);\n      } else {\n        annotationFromSelection(tokens, [tokenSelection[0], currentNode], triggerCodePopup);\n      }\n      rmTapped(tokens, tapped.current);\n      tapped.current = null;\n      setCurrentToken({ i: null });\n      return;\n    }\n\n    // otherwise, handle the double tab (on the same token) for starting the selection\n    if (tapped.current !== token.index) {\n      rmTapped(tokens, tapped.current);\n      addTapped(tokens, token.index);\n      tapped.current = token.index;\n\n      setCurrentToken({ i: token.index });\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n    } else {\n      rmTapped(tapped.current);\n      setTokenSelection((state) => updateSelection(state, tokens, token.index, true));\n    }\n  };\n\n  const onMouseDown = (event) => {\n    if (istouch.current) return; // suppress mousedown triggered by quick tap\n    // When left button pressed, start new selection\n    if (event.which === 1) {\n      selectionStarted.current = true;\n      setTokenSelection((state) => (state.length === 0 ? state : []));\n    }\n  };\n\n  const onMouseMove = (event) => {\n    if (istouch.current) return;\n\n    // When selection started (mousedown), select tokens hovered over\n    if (!editMode && selectionStarted.current) {\n      event.preventDefault();\n      if (event.which !== 1 && event.which !== 0) return null;\n      window.getSelection().empty();\n      storeMouseSelection(getToken(tokens, event));\n    } else {\n      let currentNode = getToken(tokens, event);\n      if (currentNode.index !== null) {\n        setCurrentToken((state) => {\n          if (state.i === currentNode.index) return state;\n          return { i: currentNode.index };\n        });\n        setTokenSelection((state) => updateSelection(state, tokens, currentNode.index, false));\n      } else\n        setCurrentToken((state) => {\n          if (state.i === currentNode.index || currentNode.index === null) return state;\n          return { i: currentNode.index };\n        });\n    }\n  };\n\n  const onMouseUp = (event) => {\n    if (istouch.current) return;\n    // When left mouse key is released, create the annotation\n    // note that in case of a single click, the token has not been selected (this happens on move)\n    // so this way a click can still be used to open\n    if (event.which !== 1 && event.which !== 0) return null;\n    event.preventDefault();\n    event.stopPropagation();\n    const currentNode = storeMouseSelection(getToken(tokens, event));\n    window.getSelection().empty();\n    //setHoldMouseLeft(false);\n    selectionStarted.current = false;\n\n    // this worked before, but is not possible due to touchend not registering position\n    //if (currentNode === null) return null;\n\n    // storeMouseSelection does save position to tokenSelection state, but this isn't\n    // yet updated within this scope. This results in single clicks (without mousemove)\n    // not registering. So if there is no current selection, directly use currentNode as position.\n    if (tokenSelection.length > 0 && tokenSelection[0] !== null && tokenSelection[1] !== null) {\n      annotationFromSelection(tokens, tokenSelection, triggerCodePopup);\n    } else {\n      if (currentNode !== null) {\n        annotationFromSelection(tokens, [currentNode, currentNode], triggerCodePopup);\n      }\n    }\n  };\n\n  const onContextMenu = (event) => {\n    if (event.button === 2) return null;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const storeMouseSelection = (currentNode) => {\n    // select tokens that the mouse/touch is currently pointing at\n    setCurrentToken((state) => {\n      if (state.i === currentNode.index) return state;\n      return { i: currentNode.index };\n    });\n    setTokenSelection((state) => updateSelection(state, tokens, currentNode.index, true));\n    return currentNode.index;\n  };\n\n  return <></>;\n};\n\nconst annotationFromSelection = (tokens, selection, triggerCodePopup) => {\n  let [from, to] = selection;\n  if (from > to) [from, to] = [to, from];\n  triggerCodePopup(tokens[to].index, [tokens[from].index, tokens[to].index]);\n};\n\nconst movePosition = (\n  tokens,\n  annotations,\n  key,\n  mover,\n  space,\n  editMode,\n  setCurrentToken,\n  setTokenSelection\n) => {\n  let newPosition;\n  if (!editMode) {\n    newPosition = moveToken(tokens, key, space, mover);\n  } else {\n    newPosition = moveAnnotation(tokens, annotations, key, mover);\n  }\n\n  if (mover.position !== newPosition) {\n    setCurrentToken((state) => ({ i: state === newPosition ? state : newPosition }));\n    setTokenSelection((state) => updateSelection(state, tokens, newPosition, !editMode && space));\n\n    const containerRef = tokens[newPosition].containerRef.current;\n    const tokenRef = tokens[newPosition].ref.current;\n    keepInView(containerRef, tokenRef);\n\n    // const down = key === \"ArrowRight\" || key === \"ArrowDown\";\n    // tokens[newPosition].ref.current.scrollIntoView(false, {\n    //   block: down ? \"start\" : \"end\",\n    // });\n  }\n  return newPosition;\n};\n\nconst moveToken = (tokens, key, space, mover) => {\n  let newPosition = mover.position;\n\n  if (key === \"ArrowRight\") newPosition++;\n  if (key === \"ArrowLeft\") newPosition--;\n  if (key === \"ArrowUp\") newPosition = moveSentence(tokens, mover, \"up\");\n  if (key === \"ArrowDown\") newPosition = moveSentence(tokens, mover, \"down\");\n\n  if (newPosition > mover.ntokens) newPosition = mover.ntokens;\n  if (newPosition < 0) newPosition = 0;\n\n  if (tokens[newPosition]?.ref == null) {\n    if (key === \"ArrowLeft\" || key === \"ArrowUp\") {\n      const firstUnit = tokens.findIndex((token) => token.codingUnit);\n      if (firstUnit < 0) return mover.position;\n      newPosition = firstUnit;\n    }\n    if (key === \"ArrowRight\" || key === \"ArrowDown\") {\n      const cu = tokens.map((token) => token.codingUnit);\n      const firstAfterUnit = cu.lastIndexOf(true);\n      if (firstAfterUnit < 0) return mover.position;\n      newPosition = firstAfterUnit - 1;\n    }\n  }\n\n  if (space) {\n    // limit selection to current field\n    if (tokens[mover.position].field !== tokens[newPosition].field) {\n      if (newPosition > mover.position) {\n        for (let i = newPosition; i >= mover.position; i--)\n          if (tokens[i].field === tokens[mover.position].field) {\n            newPosition = i;\n            break;\n          }\n      } else {\n        for (let i = newPosition; i <= mover.position; i++) {\n          if (tokens[i].field === tokens[mover.position].field) {\n            newPosition = i;\n            break;\n          }\n        }\n      }\n    }\n  }\n  return newPosition;\n};\n\nconst moveAnnotation = (tokens, annotations, key, mover) => {\n  let newPosition = mover.position;\n\n  if (key === \"ArrowRight\" || key === \"ArrowDown\") {\n    const nextAnnotation = tokens.findIndex(\n      (token, i) =>\n        i > newPosition &&\n        token?.ref?.current.classList.contains(\"annotated\") &&\n        (token?.ref?.current.classList.contains(\"allLeft\") ||\n          token?.ref?.current.classList.contains(\"anyLeft\"))\n    );\n    if (nextAnnotation < 0) return mover.position;\n    newPosition = nextAnnotation;\n  }\n  if (key === \"ArrowLeft\" || key === \"ArrowUp\") {\n    let prevAnnotation = -1;\n    // look for\n    for (let i = newPosition - 1; i >= -1; i--) {\n      const annotated = tokens[i]?.ref?.current.classList.contains(\"annotated\");\n      if (!annotated) continue;\n      const allLeft = tokens[i]?.ref?.current.classList.contains(\"allLeft\");\n      const anyLeft = tokens[i]?.ref?.current.classList.contains(\"anyLeft\");\n      if (!allLeft && !anyLeft) continue;\n      prevAnnotation = i;\n      break;\n    }\n    if (prevAnnotation < 0) return mover.position;\n    newPosition = prevAnnotation;\n  }\n  return newPosition;\n};\n\nconst moveSentence = (tokens, mover, direction = \"up\") => {\n  // moving sentences is a bit tricky, but we can do it via the refs to the\n  // token spans, that provide information about the x and y values\n\n  if (tokens[mover.position]?.ref == null || tokens[mover.startposition]?.ref == null) {\n    const firstUnit = tokens.findIndex((token) => token.codingUnit);\n    return firstUnit < 0 ? 0 : firstUnit;\n  }\n\n  if (direction === \"up\") {\n    return moveUp(tokens, mover.position, mover.startposition);\n  }\n  if (direction === \"down\") {\n    return moveDown(tokens, mover.position, mover.startposition);\n  }\n};\n\nconst getToken = (tokens, e) => {\n  const [n, annotated] = getNode(tokens, e);\n  if (n === null) return { index: null, annotated: false };\n  return { index: getTokenAttributes(tokens, n), annotated };\n};\n\nconst addTapped = (tokens, i) => {\n  const ref = tokens?.[i]?.ref;\n  if (ref?.current) ref.current.classList.add(\"tapped\");\n};\n\nconst rmTapped = (tokens, i) => {\n  const ref = tokens?.[i]?.ref;\n  if (ref?.current) ref.current.classList.remove(\"tapped\");\n};\n\nconst getNode = (tokens, e) => {\n  try {\n    // sometimes e is Restricted, and I have no clue why,\n    // nor how to check this in a condition. hence the try clause\n    let n;\n    if (e.type === \"mousemove\" || e.type === \"mouseup\") n = e.originalTarget || e.path[0];\n    if (e.type === \"touchmove\" || e.type === \"touchstart\") {\n      // stupid hack since someone decided touchmove target is always the starting target (weirdly inconsistent with mousemove)\n      // also, this still doesn't work for touchend, which is just arrrggg\n      let position = e.touches[0];\n      n = document.elementFromPoint(position.clientX, position.clientY);\n    }\n    if (n?.parentNode?.className === \"item\") {\n      return [null, false];\n    }\n\n    if (n) {\n      if (n.className.includes(\"token\")) {\n        return [n, false];\n      }\n      if (n.parentNode) {\n        if (n.parentNode.className.includes(\"token\")) return [n.parentNode, true];\n      }\n    }\n    return [null, false];\n  } catch (e) {\n    return [null, false];\n  }\n};\n\nconst getTokenAttributes = (tokens, tokenNode) => {\n  return parseInt(tokenNode.getAttribute(\"tokenindex\"));\n};\n\nconst returnSelectionIfChanged = (selection, newSelection) => {\n  // if it hasn't changed, return old to prevent updating the state\n  if (\n    newSelection.length > 0 &&\n    selection[0] === newSelection[0] &&\n    selection[1] === newSelection[1]\n  ) {\n    return selection;\n  }\n  return newSelection;\n};\n\nconst updateSelection = (selection, tokens, index, add) => {\n  if (index === null) return selection;\n  let newSelection = [...selection];\n\n  if (!add || newSelection.length === 0) return returnSelectionIfChanged(selection, [index, index]);\n  if (index === null) return returnSelectionIfChanged(selection, [newSelection[0], null]);\n\n  if (tokens[newSelection[0]].field === tokens[index].field) {\n    newSelection = [newSelection[0], index];\n  } else {\n    if (index > newSelection[0]) {\n      for (let i = index; i >= newSelection[0]; i--) {\n        if (tokens[newSelection[0]].field === tokens[i].field)\n          newSelection = [newSelection[0], i];\n      }\n    } else {\n      for (let i = index; i <= newSelection[0]; i++) {\n        if (tokens[newSelection[0]].field === tokens[i].field)\n          newSelection = [newSelection[0], i];\n      }\n    }\n  }\n  return returnSelectionIfChanged(selection, newSelection);\n};\n","/**\n * Get the color from the codeMap for a given annotation value/code.\n *\n * @param {*} annotationCode  annotation value/code\n * @param {*} codeMap         object with annotation values as keys, where values are objects with (at least) a color field\n * @returns\n */\nexport const getColor = (annotationCode, codeMap) => {\n  if (codeMap[annotationCode]) {\n    let color;\n    const foldTo = codeMap[annotationCode].foldToParent;\n    if (foldTo && codeMap[foldTo]) color = codeMap[foldTo].color;\n    color = codeMap[annotationCode].color;\n    return standardizeColor(color) + \"50\";\n  } else {\n    if (annotationCode === \"EMPTY\") return \"lightgrey\";\n    return \"#ffffff50\";\n  }\n};\n\n/**\n * Create a gradient for a given array of colors\n *\n * @param {*} colors ...you know, colors\n * @returns\n */\nexport const getColorGradient = (colors) => {\n  if (colors.length === 0) return \"white\";\n  if (colors.length === 1) return colors[0];\n\n  const pct = Math.floor(100 / colors.length);\n  const gradColors = colors.reduce((a, color, i) => {\n    if (i === 0) a.push(color + ` ${pct}%`);\n    if (i === colors.length - 1) a.push(color + ` ${100 - pct}%`);\n\n    if (i > 0 && i < colors.length - 1) {\n      a.push(color + ` ${pct * i}%`);\n      a.push(color + ` ${pct * (i + 1)}%`);\n    }\n    return a;\n  }, []);\n\n  return `linear-gradient(to bottom, ${gradColors.join(\", \")})`;\n};\n\nconst standardizeColor = (str) => {\n  if (!str) return \"#FFFFFF\";\n  // https://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n  ctx.fillStyle = str.trim();\n  const color = ctx.fillStyle; // make lighter\n  return color;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { AnnotationEvents } from \"./AnnotationEvents\";\nimport { Popup, List } from \"semantic-ui-react\";\nimport { getColor, getColorGradient } from \"../../../functions/tokenDesign\";\n\n/**\n * The NavigationEvents component handles all eventlisteners\n * AnnotateNavigation furthermore takes the position and selection information\n * from the navigation to highlight the tokens and show popups\n */\nconst AnnotateNavigation = ({\n  tokens,\n  variableMap,\n  annotations,\n  disableAnnotations,\n  editMode,\n  triggerCodeSelector,\n  eventsBlocked,\n  fullScreenNode,\n}) => {\n  const [currentToken, setCurrentToken] = useState({ i: null });\n  const [tokenSelection, setTokenSelection] = useState([]);\n\n  useEffect(() => {\n    if (!variableMap) return null;\n    showAnnotations(tokens, annotations, variableMap, editMode);\n  }, [tokens, annotations, variableMap, editMode]);\n\n  useEffect(() => {\n    showSelection(tokens, tokenSelection);\n  }, [tokens, tokenSelection]);\n\n  useEffect(() => {\n    setCurrentToken({ i: null });\n    setTokenSelection([]);\n  }, [tokens]);\n\n  return (\n    <>\n      <AnnotationPopup\n        tokens={tokens}\n        currentToken={currentToken}\n        setCurrentToken={setCurrentToken}\n        annotations={annotations}\n        variableMap={variableMap}\n        fullScreenNode={fullScreenNode}\n        onlyFirst={false}\n      />\n      {disableAnnotations ? null : (\n        <AnnotationEvents\n          tokens={tokens}\n          annotations={annotations}\n          currentToken={currentToken}\n          setCurrentToken={setCurrentToken}\n          tokenSelection={tokenSelection}\n          setTokenSelection={setTokenSelection}\n          triggerCodePopup={triggerCodeSelector}\n          editMode={editMode}\n          eventsBlocked={eventsBlocked}\n        />\n      )}\n    </>\n  );\n};\n\nconst showAnnotations = (tokens, annotations, variableMap, editMode) => {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (!token.ref?.current) continue;\n\n    let tokenAnnotations = allowedAnnotations(annotations?.[token.index], variableMap);\n    if (!tokenAnnotations || Object.keys(tokenAnnotations).length === 0) {\n      if (token.ref.current.classList.contains(\"annotated\")) {\n        token.ref.current.classList.remove(\"annotated\");\n        token.ref.current.style.cursor = \"default\";\n        setTokenColor(token, null, null, null);\n      }\n      continue;\n    }\n\n    annotateToken(token, tokenAnnotations, variableMap);\n\n    if (editMode) {\n      // in edit mode, make annotations look clickable\n      token.ref.current.style.cursor = \"pointer\";\n    }\n  }\n};\n\n// in the current design imported span annotations are always expanded\n// because this is also more efficient in toggling on/off\n//\n// const expandAnnotations = (annotations) => {\n//   for (let index of Object.keys(annotations)) {\n//     for (let variable of Object.keys(annotations[index])) {\n//       const span = annotations[index][variable].span;\n//       for (let spanI = span[0]; spanI <= span[1]; spanI++) {\n//         if (!annotations[spanI]) annotations[spanI] = {};\n//         annotations[spanI][variable] = { ...annotations[index][variable], index: spanI };\n//       }\n//     }\n//   }\n//   return annotations;\n// };\n\nconst allowedAnnotations = (annotations, variableMap) => {\n  if (!annotations) return null;\n\n  if (annotations && variableMap) {\n    annotations = { ...annotations };\n    for (let id of Object.keys(annotations)) {\n      const variable = annotations[id].variable;\n      if (!variableMap[variable]) {\n        delete annotations[id];\n        continue;\n      }\n      const codeMap = variableMap[variable].codeMap;\n      const code = annotations[id].value;\n      if (!codeMap[code] || !codeMap[code].active || !codeMap[code].activeParent)\n        if (!code === \"EMPTY\") delete annotations[id];\n    }\n  }\n  return annotations;\n};\n\nconst annotateToken = (token, annotations, variableMap) => {\n  // Set specific classes for nice css to show the start/end of codes\n  let nLeft = 0;\n  let nRight = 0;\n  const colors = { pre: [], text: [], post: [] };\n  let nAnnotations = Object.keys(annotations).length;\n\n  for (let id of Object.keys(annotations)) {\n    const annotation = annotations[id];\n    const codeMap = variableMap[annotation.variable].codeMap;\n    const color = getColor(annotation.value, codeMap);\n\n    colors.text.push(color);\n    if (annotation.span[0] === annotation.index) {\n      nLeft++;\n      //colors.pre.push(\"#ffffff50\");\n    } else colors.pre.push(color);\n    if (annotation.span[1] === annotation.index) {\n      nRight++;\n      //valueColors.post.push(\"#ffffff50\");\n    } else colors.post.push(color);\n  }\n\n  const allLeft = nLeft === nAnnotations;\n  const allRight = nRight === nAnnotations;\n  const anyLeft = nLeft > 0;\n  const anyRight = nRight > 0;\n\n  const cl = token.ref.current.classList;\n  cl.add(\"annotated\");\n  allLeft ? cl.add(\"allLeft\") : cl.remove(\"allLeft\");\n  anyLeft & !allLeft ? cl.add(\"anyLeft\") : cl.remove(\"anyLeft\");\n  allRight ? cl.add(\"allRight\") : cl.remove(\"allRight\");\n  anyRight & !allRight ? cl.add(\"anyRight\") : cl.remove(\"anyRight\");\n\n  const textColor = getColorGradient(colors.text);\n  const preColor = allLeft ? \"white\" : getColorGradient(colors.pre);\n  const postColor = allRight ? \"white\" : getColorGradient(colors.post);\n  setTokenColor(token, preColor, textColor, postColor);\n  //setTokenLabels(token, [\"test\", \"this\"]);\n};\n\n// const setTokenLabels = (token, labels) => {\n//   token.ref.current.style.lineHeight = `${labels.length * 1}em`;\n//   token.ref.current.style.marginBottom = \"-1em\";\n// };\n\nconst setTokenColor = (token, pre, text, post) => {\n  const children = token.ref.current.children;\n  children[0].style.background = pre;\n  children[1].style.background = text;\n  children[2].style.background = post;\n};\n\nconst showSelection = (tokens, selection) => {\n  for (let token of tokens) {\n    if (!token.ref?.current) continue;\n    token.ref.current.classList.remove(\"tapped\");\n    if (selection.length === 0 || selection[0] === null || selection[1] === null) {\n      token.ref.current.classList.remove(\"selected\");\n      continue;\n    }\n\n    let [from, to] = selection;\n    //if (to === null) return false;\n    if (from > to) [to, from] = [from, to];\n    let selected = token.arrayIndex >= from && token.arrayIndex <= to;\n    const cl = token.ref.current.classList;\n    if (selected && token.codingUnit) {\n      const left = from === token.arrayIndex;\n      const right = to === token.arrayIndex;\n      cl.add(\"selected\");\n      left ? cl.add(\"start\") : cl.remove(\"start\");\n      right ? cl.add(\"end\") : cl.remove(\"end\");\n    } else cl.remove(\"selected\");\n  }\n};\n\nconst AnnotationPopup = React.memo(\n  ({\n    tokens,\n    currentToken,\n    setCurrentToken,\n    annotations,\n    variableMap,\n    fullScreenNode,\n    onlyFirst,\n  }) => {\n    const [content, setContent] = useState(null);\n    const [refresh, setRefresh] = useState(0);\n\n    useEffect(() => {\n      if (\n        !tokens?.[currentToken.i]?.ref ||\n        !annotations?.[tokens[currentToken.i].index] ||\n        !variableMap\n      ) {\n        setContent(null);\n        setRefresh(0);\n        return null;\n      }\n\n      const tokenAnnotations = annotations[tokens[currentToken.i].index];\n      const ids = Object.keys(tokenAnnotations);\n      const list = ids.reduce((arr, id, i) => {\n        const variable = tokenAnnotations[id].variable;\n        const value = tokenAnnotations[id].value;\n        if (onlyFirst && currentToken.i !== tokenAnnotations[id].span[0]) return arr;\n        if (!variableMap[variable]) return arr;\n        const codeMap = variableMap[variable].codeMap;\n        if (!codeMap[value]) return arr;\n\n        arr.push(\n          <List.Item\n            key={i}\n            style={{\n              backgroundColor: getColor(value, codeMap),\n              padding: \"0.3em\",\n            }}\n            onMouseOver={() => setCurrentToken({ i: null })}\n          >\n            <b>{variable}</b>\n            {\": \" + value}\n          </List.Item>\n        );\n        return arr;\n      }, []);\n\n      setContent(<List>{list}</List>);\n      setRefresh(0);\n    }, [tokens, currentToken, setCurrentToken, annotations, onlyFirst, variableMap, setRefresh]);\n\n    useEffect(() => {\n      // ugly hack, but popup won't scroll along, so refresh position at intervalls if content is not null\n      if (!content) return;\n      const timer = setTimeout(() => {\n        setRefresh(refresh + 1);\n      }, 200);\n      return () => clearTimeout(timer);\n    }, [refresh, content]);\n\n    return (\n      <Popup\n        mountNode={fullScreenNode || undefined}\n        context={tokens?.[currentToken.i]?.ref}\n        basic\n        hoverable={false}\n        position=\"top left\"\n        open={true}\n        style={{\n          margin: \"0\",\n          padding: \"0\",\n          border: \"1px solid\",\n        }}\n      >\n        {content}\n      </Popup>\n    );\n  }\n);\n\nexport default AnnotateNavigation;\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nconst Meta = ({ meta_fields }) => {\n  const visibleMetaFields = meta_fields.filter((mf) => mf.visible);\n\n  const cellStyle = (row) => {\n    const style = { borderTop: \"none\" };\n    if (row.bold) style.fontWeight = \"bold\";\n    if (row.italic) style.fontStyle = \"italic\";\n    return style;\n  };\n\n  const rows = () => {\n    return visibleMetaFields.map((row) => {\n      return (\n        <Table.Row\n          style={{\n            fontSize: `${row.size != null ? row.size : 1}em`,\n          }}\n        >\n          <Table.Cell width={1} style={{ borderTop: \"none\" }}>\n            <b>{row.label || row.name}</b>\n          </Table.Cell>\n          <Table.Cell style={cellStyle(row)}>{formatValue(row.value)}</Table.Cell>\n        </Table.Row>\n      );\n    });\n  };\n\n  if (visibleMetaFields.length === 0) return null;\n\n  return (\n    <Table\n      basic=\"very\"\n      compact\n      style={{\n        lineHeight: \"0.8\",\n        padding: \"10px\",\n        paddingLeft: \"10px\",\n        border: \"1px solid grey\",\n        boxShadow: \"5px 3px 3px #e0f2ff\",\n        background: \"#e1f2ff\",\n        color: \"black\",\n      }}\n    >\n      {rows()}\n    </Table>\n  );\n};\n\nconst formatValue = (value) => {\n  //   try if value is a date, if so, format accordingly\n  //   Only remove T if time for now. Complicated due to time zones.\n  const dateInt = Date.parse(value);\n  if (dateInt) {\n    return value.replace(\"T\", \" \");\n  }\n  // if (dateInt) {\n  //   let date = new Date(dateInt);\n  //   const offset = date.getTimezoneOffset();\n  //   //date = new Date(date.getTime() - offset * 60 * 1000);\n  //   return date.toISOString().replace(\"T\", \" \").split(\".\")[0];\n  // }\n  return value;\n};\n\nexport default Meta;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Ref } from \"semantic-ui-react\";\nimport { scrollToMiddle } from \"../../../functions/scroll\";\nimport Meta from \"./Meta\";\n\nconst Tokens = ({ tokens, text_fields, meta_fields, setReady, maxHeight }) => {\n  const [text, setText] = useState({});\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    // immitates componentdidupdate to scroll to the textUnit after rendering tokens\n    const firstTextUnitToken = tokens.find((token) => token.codingUnit);\n    const hasContext = tokens.some((token) => !token.codingUnit);\n    if (!hasContext) {\n      containerRef.current.scrollTop = 0;\n      return;\n    }\n    if (firstTextUnitToken?.ref?.current && containerRef.current) {\n      scrollToMiddle(containerRef.current, firstTextUnitToken.ref.current, 1 / 3);\n    }\n  });\n\n  useEffect(() => {\n    if (!tokens) return null;\n    setText(renderText(tokens, text_fields, containerRef));\n    if (setReady) setReady((current) => current + 1); // setReady is an optional property used to let parents know the text is ready.\n  }, [tokens, text_fields, setReady]);\n\n  if (tokens === null) return null;\n\n  return (\n    <Ref innerRef={containerRef}>\n      <div\n        key=\"tokens\"\n        style={{\n          flex: \"1\",\n          display: \"flex\",\n          alignItems: null,\n          overflow: \"auto\",\n          maxHeight: maxHeight,\n        }}\n      >\n        <div\n          className=\"TokensContainer\"\n          style={{\n            flex: \"1 97%\",\n            width: \"100%\",\n          }}\n        >\n          <div\n            key=\"meta\"\n            style={{\n              width: \"100%\",\n              textAlign: \"right\",\n              padding: \"10px 30px\",\n            }}\n          >\n            <Meta meta_fields={meta_fields} />\n          </div>\n          <div key=\"text\" style={{ padding: \"20px\" }}>\n            {text[\"text\"]}\n          </div>\n          <div key=\"empty_space\" style={{ height: \"25px\" }} />\n        </div>\n      </div>\n    </Ref>\n  );\n};\n\nconst renderText = (tokens, text_fields, containerRef) => {\n  const text = { text: [] }; // yes, it would make sense to just make text an array, but for some reason React doesn't accept it\n  if (tokens.length === 0) return text;\n\n  let field = [];\n  let paragraph = [];\n  let sentence = [];\n  let codingUnit = tokens[0].codingUnit;\n  let field_name = tokens[0].field;\n  let paragraph_nr = tokens[0].paragraph;\n  let sentence_nr = tokens[0].sentence;\n\n  const getLayout = (field_name) => text_fields.find((tf) => tf.name === field_name);\n  let layout = getLayout(field_name);\n\n  for (let i = 0; i < tokens.length; i++) {\n    tokens[i].arrayIndex = i;\n\n    if (tokens[i].sentence !== sentence_nr) {\n      if (sentence.length > 0) paragraph.push(renderSentence(i, sentence_nr, sentence));\n      sentence = [];\n    }\n    if (tokens[i].paragraph !== paragraph_nr) {\n      if (paragraph.length > 0) {\n        field.push(\n          renderParagraph(\n            getLayout(field_name),\n            paragraph_nr,\n            paragraph,\n            tokens[i].paragraph !== paragraph_nr\n          )\n        );\n      }\n      paragraph = [];\n    }\n\n    if (tokens[i].field !== field_name) {\n      if (field.length > 0)\n        text[\"text\"].push(\n          renderField(getLayout(field_name), i + \"_\" + field_name, field, field_name)\n        );\n      field = [];\n    }\n\n    paragraph_nr = tokens[i].paragraph;\n    sentence_nr = tokens[i].sentence;\n    field_name = tokens[i].field;\n    codingUnit = tokens[i].codingUnit;\n\n    // give each token the informatinon its element, container\n    tokens[i].containerRef = containerRef;\n    if (codingUnit) tokens[i].ref = React.createRef();\n\n    sentence.push(renderToken(tokens[i], codingUnit));\n  }\n\n  layout = getLayout(field_name);\n  if (sentence.length > 0) paragraph.push(renderSentence(\"last\", sentence_nr, sentence));\n  if (paragraph.length > 0) field.push(renderParagraph(layout, paragraph_nr, paragraph, false));\n  if (field.length > 0)\n    text[\"text\"].push(renderField(layout, \"last_\" + field_name, field, field_name));\n  return text;\n};\n\nconst renderField = (layout, paragraph_nr, paragraphs, field) => {\n  const fontstyle = (paragraphs) => {\n    if (layout) {\n      return (\n        <>\n          {layout.label ? (\n            <span\n              key={field + paragraph_nr + \"label\"}\n              style={{\n                color: \"grey\",\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n              }}\n            >\n              {layout.label}\n            </span>\n          ) : null}\n          <span\n            key={field + paragraph_nr}\n            className=\"noselect\"\n            style={{\n              fontSize: `${layout.size != null ? layout.size : 1}em`,\n              fontWeight: layout.bold ? \"bold\" : \"normal\",\n              fontStyle: layout.italic ? \"italic\" : \"normal\",\n              textAlign: layout.justify == null || layout.justify ? \"justify\" : \"left\",\n            }}\n          >\n            {paragraphs}\n          </span>\n        </>\n      );\n    }\n    return paragraphs;\n  };\n\n  return (\n    // uses span behaving like p, because p is not allowed due to nested div (for Label)\n    <span className=\"field\" key={\"field\" + field}>\n      {fontstyle(paragraphs)}\n    </span>\n  );\n};\n\nconst renderParagraph = (layout, paragraph_nr, sentences, end) => {\n  if (layout?.paragraphs != null && !layout?.paragraphs)\n    return (\n      <span key={\"par\" + paragraph_nr}>\n        <span>{sentences}</span>\n      </span>\n    );\n\n  return (\n    // uses span behaving like p, because p is not allowed due to nested div (for Label)\n    <div key={\"pardiv\" + paragraph_nr} style={{ display: \"flex\" }}>\n      <span\n        key={\"par\" + paragraph_nr}\n        className=\"paragraph\"\n        style={{\n          flex: \"1 98%\",\n          paddingBottom: end ? \"1.5em\" : \"0em\",\n          display: \"table\",\n          paddingLeft: \"0.3em\",\n        }}\n      >\n        {sentences}\n      </span>\n    </div>\n  );\n};\n\nconst renderSentence = (position, sentence_nr, tokens) => {\n  return (\n    <span key={position + \"_\" + sentence_nr} className=\"sentence\">\n      {tokens}\n    </span>\n  );\n};\n\nconst renderToken = (token, codingUnit) => {\n  return (\n    <span\n      key={\"token\" + token.index}\n      ref={token.ref}\n      className={codingUnit ? \"token codingUnit\" : \"token\"}\n      tokenindex={token.arrayIndex}\n    >\n      <span key={\"pre\" + token.index} className=\"pre\">\n        {token.pre}\n      </span>\n      <span key={\"text\" + token.index} className=\"text\">\n        {token.text}\n      </span>\n      <span key={\"post\" + token.index} className=\"post\">\n        {token.post}\n      </span>\n    </span>\n  );\n};\n\nexport default React.memo(Tokens);\n","const createId = (annotation) => {\n  return annotation.variable + \"|\" + annotation.value;\n};\n\nexport const exportSpanAnnotations = (annotations, tokens, SpanAndText = false) => {\n  // export annotations from the object format (for fast use in the annotator) to array format\n  if (Object.keys(annotations).length === 0) return [];\n  const uniqueAnnotations = Object.keys(annotations).reduce((un_ann, index) => {\n    const ann = annotations[index];\n    for (let id of Object.keys(ann)) {\n      //const endIndex = if (index === 'unit' ? index : )\n\n      if (index !== \"unit\") if (ann[id].index !== ann[id].span[0]) continue;\n\n      const ann_obj = {\n        variable: ann[id].variable,\n        value: ann[id].value,\n        field: ann[id].field,\n        offset: ann[id].offset,\n        length: ann[id].length,\n      };\n\n      if (SpanAndText) {\n        const span = ann[id].span;\n        const text = tokens\n          .slice(span[0], span[1] + 1)\n          .map((t, i) => {\n            let string = t.text;\n            if (i > 0) string = t.pre + string;\n            if (i < span[1] - span[0]) string = string + t.post;\n            return string;\n          })\n          .join(\"\");\n        ann_obj[\"text\"] = text;\n        ann_obj[\"token_span\"] = span;\n      }\n\n      un_ann.push(ann_obj);\n    }\n    return un_ann;\n  }, []);\n  return uniqueAnnotations;\n};\n\nexport const importSpanAnnotations = (annotationsArray, tokens, currentAnnotations = {}) => {\n  if (annotationsArray.length === 0) return { ...currentAnnotations };\n  // import span annotations. Uses the offset to match annotations to tokens\n  const importedAnnotations = prepareSpanAnnotations(annotationsArray);\n  let trackAnnotations = {};\n  let matchedAnnotations = [];\n\n  for (let token of tokens) {\n    findMatches(token, importedAnnotations, trackAnnotations, matchedAnnotations);\n  }\n\n  const codeCounter = {};\n  const annArray = [];\n  for (let matchedAnnotation of matchedAnnotations) {\n    if (!codeCounter[matchedAnnotation.id]) codeCounter[matchedAnnotation.id] = 0;\n    codeCounter[matchedAnnotation.id]++;\n    annArray.push(matchedAnnotation);\n  }\n\n  let addAnnotations = [];\n  for (let ann of annArray) {\n    for (let i = ann.span[0]; i <= ann.span[1]; i++) {\n      let newAnnotation = { ...ann };\n      newAnnotation.index = i;\n      addAnnotations.push(newAnnotation);\n    }\n  }\n\n  for (let ann of annArray) {\n    currentAnnotations = toggleSpanAnnotation(currentAnnotations, ann, false, false);\n  }\n\n  return currentAnnotations;\n};\n\nexport const toggleSpanAnnotation = (annotations, newAnnotation, rm, keep_empty) => {\n  // Add span annotations in a way that prevents double assignments of the same group to a token\n  const id = createId(newAnnotation);\n\n  for (let index = newAnnotation.span[0]; index <= newAnnotation.span[1]; index++) {\n    // Check if there exists an annotation with the same variable+value at this position and if so delete it\n    if (annotations[index]) {\n      if (annotations[index][id]) {\n        // if an annotation with the same id exists, iterating over it's span to remove entirely\n        const old = annotations[index][id];\n        const span = old.span;\n        for (let i = span[0]; i <= span[1]; i++) {\n          // since we go from the span, we are actually certain the annotation exists at these indices\n          // but we just double check for stability\n          if (annotations[i]) {\n            if (annotations[i][id]) {\n              if (\n                keep_empty &&\n                Object.values(annotations[i]).filter((a) => a.variable === old.variable).length ===\n                  1\n              ) {\n                annotations[i][createId({ ...old, value: \"EMPTY\" })] = {\n                  ...annotations[i][id],\n                  value: \"EMPTY\",\n                };\n              }\n              delete annotations[i][id];\n              if (Object.keys(annotations[i]).length === 0) {\n                // if there are no annotations for this position left, delete the entry\n                delete annotations[i];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (!rm) {\n      // add the annotation\n      if (!annotations[index]) annotations[index] = {};\n      delete annotations[index][createId({ ...newAnnotation, value: \"EMPTY\" })];\n\n      annotations[index][id] = {\n        index: index,\n        variable: newAnnotation.variable,\n        span: [newAnnotation.span[0], newAnnotation.span[1]],\n        length: newAnnotation.length,\n        value: newAnnotation.value,\n        field: newAnnotation.field,\n        offset: newAnnotation.offset,\n      };\n    }\n  }\n\n  return annotations;\n};\n\nconst prepareSpanAnnotations = (annotations) => {\n  if (!annotations || annotations === \"\") return {};\n  // create an object where the key is a field+offset, and the\n  // value is an array that tells which ids (variable|value) start and end there\n  // used in Tokens for matching to token indices\n  return annotations.reduce((obj, ann) => {\n    if (!obj[ann.field]) obj[ann.field] = {};\n    if (!obj[ann.field][ann.offset]) obj[ann.field][ann.offset] = { start: [], end: [] };\n    if (!obj[ann.field][ann.offset + ann.length - 1])\n      obj[ann.field][ann.offset + ann.length - 1] = { start: [], end: [] };\n    obj[ann.field][ann.offset].start.push(ann); // for the starting point the full annotation is given, so that we have all the information\n    obj[ann.field][ann.offset + ann.length - 1].end.push(createId(ann)); // for the ending point we just need to know the id\n    return obj;\n  }, {});\n};\n\nconst findMatches = (token, importedAnnotations, trackAnnotations, matchedAnnotations) => {\n  const start = token.offset;\n  const end = token.offset + token.length - 1;\n  if (!importedAnnotations[token.field]) return;\n  const fieldAnnotations = importedAnnotations[token.field];\n\n  for (let i = start; i <= end; i++) {\n    if (fieldAnnotations[i]) {\n      for (let annotation of fieldAnnotations[i].start) {\n        const id = createId(annotation);\n        trackAnnotations[id] = {\n          ...token,\n          id,\n          variable: annotation.variable,\n          value: annotation.value,\n          offset: annotation.offset,\n          length: null,\n          span: [token.index],\n        };\n      }\n\n      for (let id of fieldAnnotations[i].end) {\n        if (!trackAnnotations[id]) continue;\n        trackAnnotations[id].span.push(token.index);\n        trackAnnotations[id].length = token.offset + token.length - trackAnnotations[id].offset;\n        matchedAnnotations.push(trackAnnotations[id]);\n        delete trackAnnotations[id];\n      }\n    }\n  }\n};\n","import randomColor from \"randomcolor\";\n\nexport const standardizeCodes = (codes) => {\n  return codes.map((code, i) => {\n    if (typeof code !== \"object\") code = { code };\n    if (code.active == null) code.active = true;\n    if (code.tree == null) code.tree = [];\n    if (code.parent == null) code.parent = \"\";\n    if (code.makes_irrelevant == null) code.makes_irrelevant = [];\n    if (typeof code.makes_irrelevant !== \"object\") code.makes_irrelevant = [code.makes_irrelevant];\n\n    if (code.required_for == null) code.required_for = [];\n    if (typeof code.required_for !== \"object\") code.required_for = [code.required_for];\n\n    if (code.color == null) code.color = randomColor({ seed: code.code, luminosity: \"light\" });\n    return code;\n  });\n};\n\nexport const codeBookEdgesToMap = (codes) => {\n  const standardizedCodes = standardizeCodes(codes);\n  // the payload is an array of objects, but for efficients operations\n  // in the annotator we convert it to an object with the codes as keys\n  const codeMap = standardizedCodes.reduce((result, code) => {\n    result[code.code] = {\n      ...code,\n      children: [],\n      totalChildren: 0,\n      totalActiveChildren: 0,\n    };\n    return result;\n  }, {});\n\n  // If there are codes of which the parent doesn't exist, add the parent\n  const originalKeys = Object.keys(codeMap);\n  for (const key of originalKeys) {\n    if (codeMap[key].parent !== \"\" && !codeMap[codeMap[key].parent]) {\n      codeMap[codeMap[key].parent] = {\n        code: codeMap[key].parent,\n        parent: \"\",\n        children: [],\n        active: false,\n        totalChildren: 0,\n        totalActiveChildren: 0,\n      };\n    }\n  }\n\n  for (const code of Object.keys(codeMap)) {\n    [codeMap[code].tree, codeMap[code].activeParent, codeMap[code].foldToParent] = parentData(\n      codeMap,\n      code\n    );\n\n    if (codeMap[code].parent) codeMap[codeMap[code].parent].children.push(code);\n\n    for (const parent of codeMap[code].tree) {\n      codeMap[parent].totalChildren++;\n      if (codeMap[code].active && codeMap[code].activeParent) {\n        codeMap[parent].totalActiveChildren++;\n      }\n    }\n  }\n\n  return codeMap;\n};\n\nexport const getCodeTreeArray = (codeMap, showColors) => {\n  let parents = Object.keys(codeMap).filter(\n    (code) => !codeMap[code].parent || codeMap[code].parent === \"\"\n  );\n  const codeTreeArray = [];\n  fillCodeTreeArray(codeMap, parents, codeTreeArray, [], showColors);\n  return codeTreeArray.map((object, i) => ({ ...object, i: i }));\n};\n\nconst fillCodeTreeArray = (codeMap, parents, codeTreeArray, codeTrail, showColors) => {\n  for (const code of parents) {\n    let newcodeTrail = [...codeTrail];\n    newcodeTrail.push(code);\n\n    codeTreeArray.push({\n      ...codeMap[code],\n      code: code,\n      codeTrail: codeTrail,\n      level: codeTrail.length,\n      color: codeMap[code].color\n        ? codeMap[code].color\n        : randomColor({ seed: code, luminosity: \"light\" }),\n    });\n\n    if (codeMap[code].children) {\n      fillCodeTreeArray(codeMap, codeMap[code].children, codeTreeArray, newcodeTrail, showColors);\n    }\n  }\n};\n\nconst parentData = (codeMap, code) => {\n  // get array of parents from highest to lowers (tree)\n  // look at parents to see if one is not active (activeParent).\n  //    (this only matters if the same parent is folded, otherwise only the parent code itself is inactive)\n  // look if there are folded parents, and if so pick the highest (foldToParent)\n  const parents = [];\n  let activeParent = true;\n  let foldToParent = \"\";\n\n  let parent = codeMap[code].parent;\n  while (parent) {\n    parents.push(parent);\n    if (codeMap[parent].folded != null && codeMap[parent].folded) {\n      foldToParent = parent; // this ends up being the highest level folded parent\n\n      // code is inactive if only one of the folded parents is inactive\n      if (codeMap[parent].active != null && !codeMap[parent].active) activeParent = false;\n    }\n    parent = codeMap[parent].parent;\n  }\n  return [parents.reverse(), activeParent, foldToParent];\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Icon, Ref } from \"semantic-ui-react\";\n\nimport { moveDown, moveUp } from \"../../../functions/refNavigation\";\n\nconst arrowKeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\nconst ButtonSelection = ({ id, active, options, onSelect }) => {\n  const [selected, setSelected] = useState(0);\n  const [allOptions, setAllOptions] = useState([]);\n  const deleted = useRef({});\n\n  useEffect(() => {\n    // add cancel button and (most importantly) add refs used for navigation\n    const cancelOption = {\n      cancel: true,\n      label: \"CLOSE\",\n      color: \"grey\",\n      value: \"CANCEL\",\n      textColor: \"white\",\n    };\n\n    let allOptions = [...options, cancelOption];\n    for (let option of allOptions) option.ref = React.createRef();\n    setAllOptions(allOptions);\n  }, [options, setAllOptions]);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      const nbuttons = allOptions.length;\n\n      // any arrowkey\n      if (arrowKeys.includes(event.key)) {\n        event.preventDefault();\n\n        if (event.key === \"ArrowRight\") {\n          if (selected < nbuttons - 1) setSelected(selected + 1);\n        }\n\n        if (event.key === \"ArrowDown\") {\n          setSelected(moveDown(allOptions, selected));\n        }\n\n        if (event.key === \"ArrowLeft\") {\n          if (selected > 0) setSelected(selected - 1);\n        }\n\n        if (event.key === \"ArrowUp\") {\n          setSelected(moveUp(allOptions, selected));\n        }\n\n        return;\n      }\n\n      // space or enter\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        let value = allOptions[selected].value;\n        onSelect(value, event.ctrlKey);\n      }\n    },\n    [selected, allOptions, onSelect]\n  );\n\n  useEffect(() => {\n    if (active) {\n      window.addEventListener(\"keydown\", onKeydown);\n    } else {\n      window.removeEventListener(\"keydown\", onKeydown);\n    }\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  }, [active, onKeydown]);\n\n  const button = (option, i) => {\n    const textColor = option.value.delete ? \"#682c2c\" : \"black\";\n    const tagColor = option.value.delete ? option.value : \"white\";\n    const tagBorderColor = option.color.slice(0, 7);\n    const borderColor = option.value.delete ? \"darkred\" : \"black\";\n    const bgColor = option.color;\n\n    return (\n      <Ref innerRef={option.ref}>\n        <Button\n          style={{\n            flex: `1 1 auto`,\n            padding: \"4px 2px\",\n            background: bgColor,\n            color: textColor,\n            border: \"3px solid\",\n            borderColor: i === selected ? borderColor : \"white\",\n            margin: \"1px\",\n          }}\n          key={option.label + \"_\" + i}\n          value={option.value}\n          compact\n          size=\"mini\"\n          onMouseOver={() => setSelected(i)}\n          onClick={(e, d) => onSelect(d.value, e.ctrlKey)}\n        >\n          {option.tag ? (\n            <span\n              style={{\n                display: \"inline-block\",\n                float: \"left\",\n                background: tagColor,\n                color: \"black\",\n                borderRadius: \"0px\",\n                border: `2px solid ${tagBorderColor}`,\n                padding: \"2px\",\n                margin: \"-4px 4px -4px -2px\",\n              }}\n            >{`${option.tag} `}</span>\n          ) : null}\n          <span>{option.label}</span>\n        </Button>\n      </Ref>\n    );\n  };\n\n  const mapButtons = () => {\n    let i = 0;\n    let cancelButton;\n    const selectButtons = [];\n    const deleteButtons = [];\n    for (let option of allOptions) {\n      if (deleted.current[option.value]) continue;\n\n      if (option.value === \"CANCEL\") cancelButton = button(option, i);\n      else if (option.value.delete) deleteButtons.push(button(option, i));\n      else selectButtons.push(button(option, i));\n\n      i++;\n    }\n\n    return (\n      <div key={id + \"_buttons\"}>\n        <div key={id + \"_1\"} style={{ display: \"flex\", flexWrap: \"wrap\", marginBottom: \"10px\" }}>\n          {selectButtons}\n        </div>\n        {deleteButtons.length > 0 ? (\n          <b>\n            <Icon name=\"trash alternate\" /> Delete codes\n          </b>\n        ) : null}\n        <div key={id + \"_2\"} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {deleteButtons}\n        </div>\n        <div key={id + \"_3\"} style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {cancelButton}\n        </div>\n      </div>\n    );\n  };\n\n  return <div key={id}>{mapButtons()}</div>;\n};\n\nexport default ButtonSelection;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Dropdown, Popup, Ref } from \"semantic-ui-react\";\nimport { toggleSpanAnnotation } from \"../../../functions/annotations\";\nimport { codeBookEdgesToMap } from \"../../../functions/codebook\";\nimport { getColor, getColorGradient } from \"../../../functions/tokenDesign\";\nimport ButtonSelection from \"./ButtonSelection\";\n\nconst arrowKeys = [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"];\n\n/**\n * This hook is an absolute beast, as it takes care of a lot of moving parts.\n * Basically, everything surrounding the popups for selecting and editing codes, and updating the annotations\n * Please don't touch it untill I get around to refactoring it, and then still don't touch it unless strictly needed\n *\n * The weirdest (but nice) part is that it returns a popup component, as well as a 'trigger' function.\n * The trigger function can then be used to trigger a popup for starting a selection or edit for a given token index (position of popup)\n * and selection (which span to create/edit)\n *\n * @param {*} tokens\n * @param {*} variables\n * @param {*} selectedVariable\n * @param {*} annotations\n * @param {*} setAnnotations\n * @param {*} codeHistory\n * @param {*} setCodeHistory\n * @param {*} fullScreenNode\n * @returns\n */\nconst useCodeSelector = (\n  tokens,\n  variables,\n  selectedVariable,\n  annotations,\n  setAnnotations,\n  codeHistory,\n  setCodeHistory,\n  fullScreenNode\n) => {\n  const [open, setOpen] = useState(false);\n  const [span, setSpan] = useState(null);\n  const [variable, setVariable] = useState(null);\n  const [tokenRef, setTokenRef] = useState(null);\n  const [tokenAnnotations, setTokenAnnotations] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [tmpCodeHistory, setTmpCodeHistory] = useState(codeHistory); // to not update during selection\n\n  const [fullVariableMap, setFullVariableMap] = useState(null);\n  const [variableMap, setVariableMap] = useState(null);\n\n  useEffect(() => {\n    // creates fullVariableMap\n    if (!variables || variables.length === 0) {\n      setFullVariableMap(null);\n      return null;\n    }\n\n    const vm = {};\n    for (let variable of variables) {\n      let cm = codeBookEdgesToMap(variable.codes);\n      cm = Object.keys(cm).reduce((obj, key) => {\n        if (!cm[key].active || !cm[key].activeParent) return obj;\n        obj[key] = cm[key];\n        return obj;\n      }, {});\n      vm[variable.name] = { ...variable, codeMap: cm };\n    }\n\n    setFullVariableMap(vm);\n  }, [variables, setFullVariableMap]);\n\n  useEffect(() => {\n    // creates the actually used variableMap from the fullVariableMap\n    // this lets us select specific variables without recreating full map\n    if (fullVariableMap === null) {\n      setVariableMap(null);\n      return;\n    }\n    setVariable(null);\n\n    let vmap;\n    if (selectedVariable === null || selectedVariable === \"EDIT ALL\") {\n      vmap = fullVariableMap;\n    } else {\n      vmap = { [selectedVariable]: fullVariableMap[selectedVariable] };\n    }\n\n    setVariableMap(vmap);\n    setEditMode(vmap?.[selectedVariable]?.editMode || selectedVariable === \"EDIT ALL\");\n  }, [fullVariableMap, selectedVariable, setVariable, setVariableMap, setEditMode]);\n\n  useEffect(() => {\n    if (open) return;\n    setCodeHistory(tmpCodeHistory);\n  }, [tmpCodeHistory, open, setCodeHistory]);\n\n  const triggerFunction = React.useCallback(\n    (index, span) => {\n      if (!tokens[index].ref) return;\n      setTokenRef(tokens[index].ref);\n      setTokenAnnotations(annotations[index] || {});\n      setSpan(span || [index, index]);\n      setOpen(true);\n    },\n    [annotations, tokens]\n  );\n\n  useEffect(() => {\n    setOpen(false);\n  }, [tokens]);\n\n  useEffect(() => {\n    if (!open) setVariable(null);\n  }, [open]);\n\n  if (!variables) return [null, null, null, true];\n\n  let popupPage1;\n  if (editMode) {\n    popupPage1 = (\n      <SelectAnnotationPage\n        tokens={tokens}\n        variable={variable}\n        setVariable={setVariable}\n        variableMap={variableMap}\n        annotations={annotations}\n        span={span}\n        setSpan={setSpan}\n        setOpen={setOpen}\n      />\n    );\n  } else {\n    popupPage1 = (\n      <SelectVariablePage\n        variable={variable}\n        setVariable={setVariable}\n        variableMap={variableMap}\n        annotations={annotations}\n        span={span}\n        setOpen={setOpen}\n      />\n    );\n  }\n\n  let popupPage2 = (\n    <NewCodePage // if current is known, select what the new code should be (or delete, or ignore)\n      tokens={tokens}\n      variable={variable}\n      variableMap={variableMap}\n      settings={variableMap?.[variable]}\n      codeHistory={codeHistory[variable] || []}\n      annotations={annotations}\n      tokenAnnotations={tokenAnnotations}\n      setAnnotations={setAnnotations}\n      span={span}\n      editMode={editMode}\n      setOpen={setOpen}\n      setCodeHistory={setTmpCodeHistory}\n    />\n  );\n\n  let popup = (\n    <CodeSelectorPopup\n      variable={variable}\n      fullScreenNode={fullScreenNode}\n      open={open}\n      setOpen={setOpen}\n      tokenRef={tokenRef}\n    >\n      {popupPage1}\n      {popupPage2}\n    </CodeSelectorPopup>\n  );\n  if (!variableMap || !tokens) popup = null;\n\n  return [popup, triggerFunction, variableMap, open, editMode];\n};\n\nconst CodeSelectorPopup = React.memo(\n  ({ variable, children, fullScreenNode, open, setOpen, tokenRef }) => {\n    const popupMargin = \"5px\";\n    let position = \"top left\";\n    let maxHeight = \"100vh\";\n\n    if (tokenRef?.current) {\n      // determine popup position and maxHeight/maxWidth\n      const bc = tokenRef.current.getBoundingClientRect();\n      const topSpace = bc.top / window.innerHeight;\n      const bottomSpace = (window.innerHeight - bc.bottom) / window.innerHeight;\n      if (topSpace > bottomSpace) {\n        position = \"top\";\n        maxHeight = `calc(${topSpace * 100}vh - ${popupMargin})`;\n      } else {\n        position = \"bottom\";\n        maxHeight = `calc(${bottomSpace * 100}vh - ${popupMargin})`;\n      }\n      const leftSpace = bc.left / window.innerWidth;\n      const rightSpace = (window.innerWidth - bc.right) / window.innerWidth;\n      position = rightSpace > leftSpace ? position + \" left\" : position + \" right\";\n    }\n\n    // somehow onclose trigger when first opening popup. this hack enables closing it\n    // when clicking outside of the popup\n    let canIClose = false;\n\n    return (\n      <Popup\n        mountNode={fullScreenNode || undefined}\n        context={tokenRef}\n        basic\n        wide\n        position={position}\n        hoverable\n        open={open}\n        mouseLeaveDelay={10000000} // just don't use mouse leave\n        onClose={(e, d) => {\n          if (canIClose) setOpen(false);\n          canIClose = true;\n        }}\n        style={{\n          margin: popupMargin,\n          padding: \"0px\",\n          background: \"#dfeffb\",\n          border: \"1px solid #136bae\",\n          //backdropFilter: \"blur(3px)\",\n          minWidth: \"15em\",\n          maxHeight,\n          overflow: \"auto\",\n        }}\n      >\n        <div style={{ margin: \"5px\", border: \"0px\" }}>{children}</div>\n      </Popup>\n    );\n  }\n);\n\nconst SelectVariablePage = ({ variable, setVariable, annotations, span, setOpen, variableMap }) => {\n  const getOptions = () => {\n    let variables = Object.keys(variableMap);\n    const variableColors = {};\n    for (let v of variables) {\n      const colors = {};\n      for (let i = span[0]; i <= span[1]; i++) {\n        if (!annotations[i]) continue;\n        for (let id of Object.keys(annotations[i])) {\n          const a = annotations[i][id];\n          if (a.variable !== v) continue;\n          colors[a.value] = getColor(a.value, variableMap?.[v]?.codeMap);\n        }\n      }\n      variableColors[v] = getColorGradient(Object.values(colors));\n    }\n\n    return variables.map((variable) => ({\n      color: variableColors[variable],\n      label: variable,\n      value: variable,\n    }));\n  };\n\n  const options = getOptions();\n  useEffect(() => {\n    if (options.length === 1) setVariable(options[0].value);\n  }, [options, setVariable]);\n\n  if (variable || !span) return null;\n\n  return (\n    <div>\n      <Popup.Header style={{ textAlign: \"center\" }}>Select variable</Popup.Header>\n      <ButtonSelection\n        id={\"currentCodePageButtons\"}\n        active={true}\n        options={options}\n        setOpen={setOpen}\n        onSelect={(value, ctrlKey) => {\n          if (value === \"CANCEL\") {\n            setOpen(false);\n            return;\n          }\n          setVariable(value);\n        }}\n      />\n    </div>\n  );\n};\n\nconst SelectAnnotationPage = ({\n  tokens,\n  variable,\n  setVariable,\n  annotations,\n  span,\n  setSpan,\n  setOpen,\n  variableMap,\n}) => {\n  const onButtonSelection = (value, ctrlKey) => {\n    if (value === \"CANCEL\") {\n      setOpen(false);\n      return;\n    }\n    setSpan(value.span);\n    setVariable(value.variable);\n    //setExisting(value.annotations);\n  };\n\n  const getAnnotationOptions = () => {\n    // create an array of spans, where key is the text, and\n    const variableSpans = {};\n\n    for (let i = span[0]; i <= span[1]; i++) {\n      if (!annotations[i]) continue;\n      for (let id of Object.keys(annotations[i])) {\n        const annotation = annotations[i][id];\n        const codeMap = variableMap?.[annotation.variable]?.codeMap;\n        if (!variableMap[annotation.variable]) continue;\n        if (!codeMap?.[annotation.value] && annotation.value !== \"EMPTY\") continue;\n\n        const span = annotation.span;\n        const key = annotation.variable + \":\" + span[0] + \"-\" + span[1];\n        const label = '\"' + getTextSnippet(tokens, span) + '\"';\n        const color = getColor(annotation.value, codeMap);\n        if (!variableSpans[key]) {\n          variableSpans[key] = {\n            tag: annotation.variable,\n            label,\n            colors: [color],\n            value: {\n              //annotations: [annotation],\n              variable: annotation.variable,\n              span: annotation.span,\n            },\n          };\n        } else {\n          variableSpans[key].colors.push(color);\n          //variableSpans[key].value.annotations.push(annotation);\n        }\n      }\n    }\n\n    return Object.keys(variableSpans).map((key) => {\n      return { ...variableSpans[key], color: getColorGradient(variableSpans[key].colors) };\n    });\n  };\n\n  if (variable || !span) return null;\n\n  const options = getAnnotationOptions();\n  if (options.length === 0) setOpen(false);\n  if (options.length === 1) {\n    onButtonSelection(options[0].value);\n  }\n\n  return (\n    <div>\n      <Popup.Header style={{ textAlign: \"center\" }}>Select annotation</Popup.Header>\n      <ButtonSelection\n        id={\"currentCodePageButtons\"}\n        active={true}\n        options={options}\n        setOpen={setOpen}\n        onSelect={onButtonSelection}\n      />\n    </div>\n  );\n};\n\nconst NewCodePage = ({\n  tokens,\n  variable,\n  variableMap,\n  codeHistory,\n  settings,\n  annotations,\n  tokenAnnotations,\n  setAnnotations,\n  editMode,\n  span,\n  setOpen,\n  setCodeHistory,\n}) => {\n  const textInputRef = useRef(null);\n  const [focusOnButtons, setFocusOnButtons] = useState(true);\n\n  const onKeydown = React.useCallback(\n    (event) => {\n      if (settings && !settings.searchBox && !settings.buttonMode === \"recent\") return null;\n      const focusOnTextInput = textInputRef?.current?.children[0] === document.activeElement;\n      if (!focusOnTextInput) setFocusOnButtons(true);\n      if (event.keyCode === 27) setOpen(false);\n      if (arrowKeys.includes(event.key)) return null;\n      if (event.keyCode <= 46 || event.keyCode >= 106) return null;\n      if (textInputRef.current) textInputRef.current.click();\n      setFocusOnButtons(false);\n    },\n    [textInputRef, setOpen, settings]\n  );\n\n  const getExistingAnnotations = (variable) => {\n    const annMap = {};\n\n    for (let i = span[0]; i <= span[1]; i++) {\n      if (annotations?.[i]) {\n        for (let id of Object.keys(annotations[i])) {\n          const a = annotations[i][id];\n          if (a.variable !== variable) continue;\n          const annId = a.span[0] + \"_\" + id;\n          annMap[annId] = { id, ...annotations[i][id] };\n        }\n      }\n    }\n\n    return Object.keys(annMap).length > 0 ? Object.values(annMap) : [];\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeydown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeydown);\n    };\n  });\n\n  const onSelect = (annotation, ctrlKey) => {\n    if (annotation === \"CANCEL\") {\n      setOpen(false);\n      return;\n    }\n    updateAnnotations(tokens, annotation, setAnnotations, codeHistory, setCodeHistory, editMode);\n\n    if (!variableMap?.[variable]?.multiple && !ctrlKey) setOpen(false);\n  };\n\n  const autoCode = (codeMap, existing) => {\n    const codes = Object.keys(codeMap);\n    if (codes.length !== 1) return null;\n\n    const value = codes[0];\n    const nonEmpty = existing.filter((e) => e.value !== \"EMPTY\");\n    if (nonEmpty.length === 0) {\n      // If there is only one option (which only happens if there is only 1 possible value and nothing that can be deleted), select it automatically\n      setTimeout(() => onSelect({ variable, span, value, delete: false }), 0);\n      setOpen(false);\n    }\n    if (editMode && nonEmpty.length === 1 && value === nonEmpty[0].value) {\n      setTimeout(() => onSelect({ variable, span, value, delete: true }), 0);\n      setOpen(false);\n    }\n  };\n\n  const getOptions = () => {\n    const existing = getExistingAnnotations(variable);\n    const buttonOptions = [];\n    const dropdownOptions = [];\n    const codeMap = variableMap?.[variable]?.codeMap;\n    autoCode(codeMap, existing);\n\n    for (let code of Object.keys(codeMap)) {\n      const singleSelection = span === null || span[0] === span[1];\n      if (singleSelection && tokenAnnotations[code]) continue;\n\n      if (settings && settings.buttonMode === \"all\")\n        buttonOptions.push({\n          key: code,\n          label: code,\n          value: { variable, value: code, span, delete: false },\n          color: getColor(code, codeMap),\n        });\n\n      let tree = codeMap[code].tree.join(\" - \");\n\n      dropdownOptions.push({\n        key: code,\n        value: { variable, value: code, span, delete: false },\n        text: code + \" test\" + tree,\n        content: (\n          <>\n            {code}\n            <br />\n            <span style={{ color: \"grey\" }}>{tree}</span>\n          </>\n        ),\n      });\n    }\n\n    // use 'recent' mode if specified, or if settings are missing\n    if (!settings || settings.buttonMode === \"recent\") {\n      let nRecent = 9;\n      for (let code of codeHistory) {\n        if (nRecent < 0) break;\n        if (!codeMap[code]) continue;\n        buttonOptions.push({\n          key: code,\n          label: code,\n          value: { variable, value: code, span, delete: false },\n          color: getColor(code, codeMap),\n        });\n        nRecent--;\n      }\n    }\n\n    if (existing && existing.length > 0) {\n      for (let o of existing) {\n        if (!codeMap[o.value]) continue;\n\n        buttonOptions.push({\n          tag: o.value,\n          label: '\"' + getTextSnippet(tokens, o.span) + '\"',\n          color: getColor(o.value, codeMap),\n          value: { ...o, delete: true },\n          textColor: \"darkred\",\n        });\n      }\n    }\n\n    return [buttonOptions, dropdownOptions];\n  };\n\n  const asButtonSelection = (options) => {\n    // act automatically if button selection is the only mode, and there are no options or only 1\n    // if (settings.buttonMode === \"all\" && !settings.searchBox) {\n    //   if (options.length === 0) return null;\n\n    //   if (options.length === 1) {\n    //     // If there is only one option (which only happens if there is only 1 possible value and nothing that can be deleted), select it automatically\n    //     setTimeout(() => onSelect(options[0].value), 0);\n    //     setOpen(false);\n    //   }\n    //   if (\n    //     editMode &&\n    //     options.length === 2 &&\n    //     (options[0].value.delete || options[1].value.delete)\n    //   ) {\n    //     // In editmode, if there is only 1 possible value, and it has already been selected, delete it automatically\n    //     // Basically this means that for binary variables, clicking in edit mode equals toggling\n    //     if (options[0].value.value === options[1].value.value) {\n    //       setTimeout(() => onSelect({ ...options[0].value, delete: true }), 0);\n    //       setOpen(false);\n    //     }\n    //   }\n    // }\n\n    return (\n      <>\n        {settings.buttonMode === \"recent\" && codeHistory.length > 0 ? <b>Recent codes</b> : null}\n        <ButtonSelection\n          id={\"newCodePageButtons\"}\n          active={focusOnButtons}\n          setAnnotations={setAnnotations}\n          options={options}\n          setOpen={setOpen}\n          onSelect={onSelect}\n        />\n      </>\n    );\n  };\n\n  const asDropdownSelection = (options) => {\n    if (options.length === 0) return null;\n    //const codeMap = variableMap?.[variable]?.codeMap;\n    //if (!codeMap) return null;\n\n    // use searchBox if specified OR if settings are missing\n    // also, if buttonmode is 'recent', always show search box\n    if (settings && !settings.searchBox && settings.buttonMode !== \"recent\")\n      return <div style={{ height: \"25px\" }} />;\n\n    return (\n      <Ref innerRef={textInputRef}>\n        <Dropdown\n          fluid\n          placeholder={\"<type to search>\"}\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            width: \"100%\",\n            height: \"20px\",\n            marginBottom: \"5px\",\n            overflow: \"visible\",\n            position: \"relative\",\n          }}\n          options={options}\n          open={!focusOnButtons}\n          search\n          selectOnNavigation={false}\n          minCharacters={0}\n          autoComplete={\"on\"}\n          onClick={() => setFocusOnButtons(false)}\n          onSearchChange={(e, d) => {\n            if (d.searchQuery === \"\") setFocusOnButtons(true);\n          }}\n          onClose={() => setFocusOnButtons(true)}\n          onChange={(e, d) => {\n            onSelect(d.value, e.ctrlKey);\n          }}\n        />\n      </Ref>\n    );\n  };\n\n  if (!variable) return null;\n\n  const [buttonOptions, dropdownOptions] = getOptions();\n\n  return (\n    <>\n      {asDropdownSelection(dropdownOptions)}\n      {asButtonSelection(buttonOptions)}\n    </>\n  );\n};\n\nconst getTextSnippet = (tokens, span, maxlength = 8) => {\n  let text = tokens.slice(span[0], span[1] + 1).map((t) => t.pre + t.text + t.post);\n  if (text.length > maxlength)\n    text = [\n      text.slice(0, Math.floor(maxlength / 2)).join(\"\"),\n      \" ... \",\n      text.slice(-Math.floor(maxlength / 2)).join(\"\"),\n    ];\n  return text.join(\"\");\n};\n\nconst updateAnnotations = (\n  tokens,\n  annotation,\n  setAnnotations,\n  codeHistory,\n  setCodeHistory,\n  editMode\n) => {\n  const [from, to] = annotation.span;\n  annotation.index = tokens[from].index;\n  annotation.length = tokens[to].length + tokens[to].offset - tokens[from].offset;\n  annotation.span = [tokens[from].index, tokens[to].index];\n  annotation.field = tokens[from].field;\n  annotation.offset = tokens[from].offset;\n\n  setAnnotations((state) =>\n    toggleSpanAnnotation({ ...state }, annotation, annotation.delete, editMode)\n  );\n  setCodeHistory((state) => {\n    return {\n      ...state,\n      [annotation.variable]: [\n        annotation.value,\n        ...codeHistory.filter((v) => v !== annotation.value),\n      ],\n    };\n  });\n};\n\nexport default useCodeSelector;\n","import nlp from \"compromise\";\nimport paragraphs from \"compromise-paragraphs\";\nnlp.extend(paragraphs);\n\n/**\n * Tokenize a document, but allowing for multiple text fields to be concatenated as different fields.\n * @param {*} text_fields  An array of objects, where each object has the structure {name, value}. 'name' becomes the name of the field, 'value' is the text\n *                         each item can also have an 'offset' key with an integer value, in case the value is a subset starting at the [offset] character (this is needed to get the correct positions in the original document)\n *                         each item can also have a 'unit_start' and 'unit_end' key, each with an integer value to indicate where in this text_field the codingUnit starts/ends.\n *                              If both unit_start and unit_end is omitted, the whole text is considered codingUnit.\n * @returns\n */\nexport const parseTokens = (text_fields) => {\n  const tokens = [];\n  let token = null;\n  let paragraph = 0; // offset can be used if position in original article is known\n  let sentence = 0;\n  let tokenIndex = 0;\n  let t = null;\n  let text = null;\n\n  let has_unit_start = false;\n  for (let text_field of text_fields)\n    if (text_field.unit_start != null || text_field.context_before != null) has_unit_start = true;\n  let unit_started = !has_unit_start; // if unit start not specified, start from beginning\n  let unit_ended = false;\n\n  for (let text_field of text_fields) {\n    let field = text_field.name || \"text\";\n    let offset = text_field.offset || 0;\n\n    text = text_field.value;\n    if (text_field.context_before != null) {\n      text = text_field.context_before + text;\n      text_field.unit_start = text_field.context_before.length;\n    }\n    if (text_field.context_after != null) {\n      text_field.unit_end = text.length;\n      text = text + text_field.context_after;\n    }\n\n    t = nlp.tokenize(text).paragraphs().json({ offset: true });\n    // map to single array.\n    for (let par = 0; par < t.length; par++) {\n      for (let sent = 0; sent < t[par].sentences.length; sent++) {\n        for (let sent2 = 0; sent2 < t[par].sentences[sent].length; sent2++) {\n          // for some reason there's an extra array layer between sents and pars...\n          // I've only found cases where lenght is 1, but I'll map it just in case\n          for (let term = 0; term < t[par].sentences[sent][sent2].terms.length; term++) {\n            token = t[par].sentences[sent][sent2].terms[term];\n\n            if (\n              text_field.unit_start != null &&\n              token.offset.start + offset >= text_field.unit_start\n            )\n              unit_started = true;\n            if (text_field.unit_end != null && token.offset.start + offset > text_field.unit_end)\n              unit_ended = true;\n\n            const tokenobj = {\n              field: field,\n              offset: token.offset.start + offset,\n              length: token.offset.length,\n              paragraph: paragraph,\n              sentence: sentence,\n              index: tokenIndex,\n              text: token.text,\n              pre: token.pre,\n              post: token.post,\n              codingUnit: unit_started & !unit_ended,\n            };\n            tokens.push(tokenobj);\n            tokenIndex++;\n          }\n        }\n        sentence++;\n      }\n      paragraph++;\n    }\n  }\n  return tokens;\n};\n\nexport const importTokens = (tokens) => {\n  tokens = tokensColumnToRow(tokens);\n\n  let paragraph = 0;\n  let last_paragraph = tokens[0].paragraph;\n\n  let sentence = 0;\n  let last_sentence = tokens[0].sentence;\n\n  let offset = 0;\n  let totalLength = 0;\n\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].text == null) {\n      if (tokens[i].token != null) {\n        tokens[i].text = tokens[i].token;\n      } else {\n        alert(\"Invalid token data:\\n\\nimported tokens must have 'text' or 'token' field\");\n        return null;\n      }\n    }\n    if (tokens[i].offset == null && tokens[i].start != null) tokens[i].offset = tokens[i].start;\n    if (tokens[i].length == null) tokens[i].length = tokens[i].text.length;\n\n    if (tokens[i].pre == null) tokens[i].pre = \"\";\n    if (tokens[i].post == null && tokens[i].space != null) tokens[i].post = tokens[i].space;\n    if (tokens[i].post == null) {\n      if (tokens[i].offset != null && tokens[i].length != null) {\n        tokens[i].post =\n          i < tokens[i].length - 1\n            ? \" \".repeat(Math.max(0, tokens[i + 1].offset - tokens[i].offset - tokens[i].length))\n            : \"\";\n      } else {\n        tokens[i].post = \" \";\n      }\n    }\n\n    totalLength = tokens[i].length + tokens[i].post.length;\n    if (i < tokens.length - 1) totalLength = totalLength + (tokens[i + 1].pre?.length || 0);\n\n    if (tokens[i].offset == null) {\n      tokens[i].offset = offset;\n      offset = offset + totalLength;\n    }\n\n    if (i < tokens.length - 1) {\n      if (!tokens[i].field || tokens[i].field === tokens[i + 1].field) {\n        if (tokens[i + 1].offset == null && tokens[i + 1].start != null)\n          tokens[i + 1].offset = tokens[i + 1].start;\n        if (tokens[i + 1].offset && tokens[i + 1].offset < tokens[i].offset + totalLength) {\n          alert(\n            `Invalid token position data. The length of \"${\n              tokens[i].pre + tokens[i].text + tokens[i].post\n            }\" on position ${tokens[i].offset} exeeds the offset/start position of the next token`\n          );\n          return null;\n        }\n      }\n    }\n\n    // ensure sentence counter\n    // currently doesn't actually do sentence boundary detection (if people want that,\n    // they should include sentence in the input)\n    // if sentence exists, still overwrite with new counter to ensure that it adds up\n    // also increment sentence on new paragraph\n    if (tokens[i].sentence == null) {\n      tokens[i].sentence = sentence;\n      if (tokens[i].text.includes(\"\\n\") || tokens[i].post.includes(\"\\n\")) sentence++;\n    } else {\n      if (tokens[i].paragraph !== last_paragraph || tokens[i].sentence !== last_sentence) {\n        last_sentence = tokens[i].sentence;\n        sentence++;\n      }\n      tokens[i].sentence = sentence;\n    }\n\n    // ensure paragraph counter\n    // if paragraph exists, still overwrite with new counter to ensure that it adds up\n    if (tokens[i].paragraph == null) {\n      tokens[i].paragraph = paragraph;\n      if (tokens[i].text.includes(\"\\n\") || tokens[i].post.includes(\"\\n\")) paragraph++;\n    } else {\n      if (tokens[i].paragraph !== last_paragraph) {\n        last_paragraph = tokens[i].paragraph;\n        paragraph++;\n      }\n      tokens[i].paragraph = paragraph;\n    }\n\n    if (tokens[i].field == null) tokens[i].field = \"text\";\n    tokens[i].index = i;\n  }\n\n  return tokens;\n};\n\nexport const importTokenAnnotations = (tokens, codes) => {\n  // returns annotations, and also modifies the codes object\n  // codes keeps track of annotations to create a codebook\n  if (tokens.length === 0) return [];\n  let annotations = [];\n  let codeTracker = {};\n  let field = tokens[0].field;\n  for (let i = 0; i < tokens.length; i++) {\n    if (!tokens[i].annotations) {\n      for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n      codeTracker = {};\n      continue;\n    }\n\n    let annotationDict = {};\n\n    for (let annotation of tokens[i].annotations) {\n      if (annotation.value === \"\") continue; // Should be a checkbox when importing\n\n      if (!codes[annotation.name]) {\n        codes[annotation.name] = new Set();\n      }\n      codes[annotation.name].add(annotation.value);\n\n      annotationDict[annotation.name] = annotation.value;\n\n      const prevTokenPost = i > 0 ? tokens[i - 1].post : \"\";\n      if (codeTracker[annotation.name] == null)\n        codeTracker[annotation.name] = {\n          index: i,\n          variable: annotation.name,\n          value: annotation.value,\n          offset: tokens[i].offset,\n          text: tokens[i].text,\n          field: tokens[i].field,\n          length: tokens[i].length,\n        };\n      if (codeTracker[annotation.name].value === annotation.value) {\n        codeTracker[annotation.name].length =\n          tokens[i].offset + tokens[i].length - codeTracker[annotation.name].offset;\n        codeTracker[annotation.name].text += prevTokenPost + tokens[i].pre + tokens[i].post;\n      }\n    }\n\n    for (let key of Object.keys(codeTracker)) {\n      if (annotationDict[key] == null) {\n        annotations.push(codeTracker[key]);\n        delete codeTracker[key];\n        continue;\n      }\n      if (annotationDict[key] !== codeTracker[key].value) {\n        annotations.push(codeTracker[key]);\n        codeTracker[key] = {\n          index: i,\n          variable: key,\n          value: annotationDict[key],\n          offset: tokens[i].offset,\n          text: tokens[i].text,\n          field: tokens[i].field,\n          length: tokens[i].length,\n        };\n      }\n    }\n\n    if (i < tokens.length - 1 && tokens[i + 1].field !== field) {\n      for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n      codeTracker = {};\n      field = tokens[i].field;\n      continue;\n    }\n  }\n\n  for (let annotation of Object.values(codeTracker)) annotations.push(annotation);\n\n  return annotations;\n};\n\n/**\n * Check if tokens are in column format\n *  [{doc_id: [1,1,1,1,...]},{token_id: [1,2,3,4,etc.]}]\n * and if so, change to row format\n *  {doc_id: 1, token_id: 1}, {doc_id: 2, token_id: 2}\n *\n * row format is easier to work with, but column format is more efficient\n * so allow it to be used as input.\n * @param {} tokens\n */\nexport const tokensColumnToRow = (tokens) => {\n  if (Array.isArray(tokens)) return tokens;\n  const columns = Object.keys(tokens);\n  const n = tokens[columns[0]].length;\n\n  const tokensArray = [];\n  for (let i = 0; i < n; i++) {\n    const token = columns.reduce((obj, column) => {\n      obj[column] = tokens[column][i];\n      return obj;\n    }, {});\n    tokensArray.push(token);\n  }\n\n  return tokensArray;\n};\n","import { useState, useEffect } from \"react\";\nimport { prepareDocument } from \"../../../functions/createDocuments\";\n\nconst useUnit = (unit, safetyCheck, returnTokens, setCodeHistory) => {\n  const [preparedUnit, setPreparedUnit] = useState({});\n  const [annotations, setAnnotations] = useState();\n\n  useEffect(() => {\n    if (!unit?.text && !unit.text_fields && !unit.tokens) return null;\n\n    if (!unit.annotations) unit.annotations = [];\n    if (unit.importedAnnotations && !unit.status) {\n      // only if status is new (which currently is just no status)\n      unit.annotations = unit.annotations.concat(unit.importedAnnotations);\n    }\n    initializeCodeHistory(unit.annotations, setCodeHistory);\n\n    const document = prepareDocument(unit);\n    safetyCheck.current = {\n      tokens: document.tokens,\n      //annotationsChanged: false,\n      //annotations: hash(document.annotations),\n    };\n    setPreparedUnit({\n      tokens: document.tokens,\n      text_fields: document.text_fields,\n      meta_fields: document.meta_fields,\n    });\n\n    setAnnotations(document.annotations);\n    if (returnTokens) returnTokens(document.tokens);\n  }, [unit, returnTokens, safetyCheck, setCodeHistory]);\n\n  // if returnAnnotations is falsy (so not passed to Document), make setAnnotations\n  // falsy as well. This is used further down as a sign that annotations are disabled\n  return [preparedUnit, annotations, setAnnotations];\n};\n\nconst initializeCodeHistory = (annotations, setCodeHistory) => {\n  const ch = {};\n  for (let annotation of annotations) {\n    if (!ch[annotation.variable]) ch[annotation.variable] = new Set();\n    ch[annotation.variable].add(annotation.value);\n  }\n  for (let key of Object.keys(ch)) {\n    ch[key] = [...ch[key]];\n  }\n  setCodeHistory(ch);\n};\n\nexport default useUnit;\n","import { importTokens, importTokenAnnotations, parseTokens } from \"./tokens\";\nimport { importSpanAnnotations } from \"./annotations\";\n\nexport const prepareDocument = (document, codes = {}) => {\n  const doc = { ...document };\n\n  if (doc.tokens) {\n    doc.importedTokens = true;\n    doc.tokens = importTokens(document.tokens);\n  } else {\n    doc.importedTokens = false;\n    if (!doc.text_fields && doc.text) doc.text_fields = [{ name: \"text\", value: doc.text }];\n    doc.tokens = parseTokens([...doc.text_fields]);\n  }\n\n  doc.meta_fields = document.meta_fields || [];\n\n  if (doc.tokens.length > 0) {\n    doc.n_paragraphs = doc.tokens[doc.tokens.length - 1].paragraph;\n    doc.n_sentences = doc.tokens[doc.tokens.length - 1].sentence;\n  } else {\n    doc.n_paragraphs = 0;\n    doc.n_sentences = 0;\n  }\n\n  // ImportSpanAnnotations transforms the array format annotations to an object format.\n  // More importantly, it matches the annotations to token indices (based on the char offset)\n  if (doc.annotations) {\n    doc.annotations = importSpanAnnotations([...doc.annotations], doc.tokens);\n  } else doc.annotations = {};\n\n  const tokenAnnotations = importTokenAnnotations(doc.tokens, codes); // also fills codes\n  if (tokenAnnotations.length > 0)\n    doc.annotations = importSpanAnnotations(tokenAnnotations, doc.tokens, doc.annotations);\n\n  return doc;\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst SelectVariable = ({ variables, variable, setVariable, minHeight, editAll }) => {\n  const variableNames = useMemo(() => {\n    let variableNames = [];\n    if (variables != null && variables?.length > 0) {\n      variableNames = variables.map((v) => v.name);\n      if (editAll) variableNames.push(\"EDIT ALL\");\n    }\n    return variableNames;\n  }, [variables, editAll]);\n\n  const onKeyDown = (e) => {\n    let move = 0;\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      if (e.shiftKey) {\n        if (!e.repeat) {\n          move = -1;\n        }\n      } else {\n        if (!e.repeat) {\n          move = 1;\n        }\n      }\n    }\n\n    const currentIndex = variableNames.findIndex((name) => name === variable);\n    let newIndex = currentIndex + move;\n    if (newIndex > variableNames.length - 1) newIndex = 0;\n    if (newIndex < 0) newIndex = variableNames.length - 1;\n    setVariable(variableNames[newIndex]);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n\n  useEffect(() => {\n    if (variable === null) setVariable(variableNames[0]);\n    if (!variables || variables.length === 0) {\n      setVariable(null);\n      return null;\n    }\n  }, [variable, variables, setVariable, variableNames]);\n\n  //if (!variables) return null;\n  let helpText = null;\n  if (variables) {\n    const variableObj = variables.find((v) => v.name === variable);\n    helpText = variableObj?.instruction;\n  }\n  if (variable === \"EDIT ALL\") helpText = \"Show and edit all variables\";\n\n  return (\n    <div\n      style={{\n        background: \"#1277c469\",\n        borderBottomLeftRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTop: \"2px solid #2185d0\",\n        textAlign: \"center\",\n      }}\n    >\n      <VariableButtons\n        variable={variable}\n        setVariable={setVariable}\n        variables={variables}\n        variableNames={variableNames}\n        minHeight={minHeight}\n      />\n      <p\n        style={{\n          margin: \"0\",\n          padding: \"2px\",\n          minHeight: \"24px\",\n        }}\n      >\n        {helpText}\n      </p>\n    </div>\n  );\n};\n\nconst VariableButtons = ({ variable, setVariable, variables, variableNames, minHeight }) => {\n  const mapVariables = () => {\n    return variableNames.map((name) => {\n      return (\n        <Button\n          key={name}\n          primary\n          active={name === variable}\n          style={{\n            padding: \"0\",\n            border: \"1px solid\",\n            color: name === variable ? \"black\" : \"white\",\n          }}\n          onClick={() => setVariable(name)}\n        >\n          {name}\n        </Button>\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!variables) return null;\n    if (variables.length === 1) {\n      setVariable(variables[0].name);\n      return null;\n    }\n    if (!variableNames.includes(variable)) setVariable(variableNames[0]);\n  }, [variables, setVariable, variableNames, variable]);\n\n  return (\n    <>\n      <Button.Group attached=\"bottom\" fluid style={{ minHeight: `${minHeight / 2}px` }}>\n        {mapVariables()}\n      </Button.Group>\n    </>\n  );\n};\n\nexport default SelectVariable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport AnnotateNavigation from \"./components/AnnotateNavigation\";\nimport Tokens from \"./components/Tokens\";\nimport useCodeSelector from \"./components/useCodeSelector\";\nimport { exportSpanAnnotations } from \"../../functions/annotations\";\nimport useUnit from \"./components/useUnit\";\nimport SelectVariable from \"./components/SelectVariable\";\n\nimport \"./documentStyle.css\";\n\n/**\n * This is hopefully the only Component in this folder that you'll ever see. It should be fairly isolated\n * and easy to use, but behind the scenes it gets dark real fast.\n * @param {*} unit     A unit object, as created in JobServerClass (or standardizeUnit)\n * @param {*} variables An object with variables, where each variable is an array of codes\n * @param {*} settings An object with settings. Supports \"editAll\" (and probably more to come)\n * @param {*} onChangeAnnotations An optional function for saving annotations.\n *                              If not given, users cannot make annotations\n * @param {*} returnTokens   An optional function for getting access to the tokens array\n * @param {*} returnVariableMap An optional function for getting access to the variableMap\n * @param {*} setReady       A function for passing a boolean to the parent to indicate that the\n *                           text is ready (which is usefull if the parent wants to transition\n *                           to new texts nicely)\n * @param {*} blockEvents    boolean. If true, disable event listeners\n * @param {*} fullScreenNode In fullscreenmode, popups can require a mountNode.\n * @returns\n */\nconst Document = ({\n  unit,\n  variables, //codes,\n  settings,\n  onChangeAnnotations,\n  returnTokens,\n  returnVariableMap,\n  setReady,\n  blockEvents,\n  fullScreenNode,\n}) => {\n  const safetyCheck = useRef(null); // ensures only new annotations for the current unit are passed to onChangeAnnotations\n  const [variable, setVariable] = useState(null);\n  const [codeHistory, setCodeHistory] = useState({});\n\n  const [tokensReady, setTokensReady] = useState(0);\n  const [preparedUnit, annotations, setAnnotations] = useUnit(\n    unit,\n    safetyCheck,\n    returnTokens,\n    setCodeHistory\n  );\n  const [codeSelector, triggerCodeSelector, variableMap, codeSelectorOpen, editMode] =\n    useCodeSelector(\n      preparedUnit.tokens,\n      variables,\n      variable,\n      annotations,\n      setAnnotations,\n      codeHistory,\n      setCodeHistory,\n      fullScreenNode\n    );\n\n  useEffect(() => {\n    if (!annotations || !onChangeAnnotations) return;\n    // check if same unit, to prevent annotations from spilling over due to race conditions\n    if (safetyCheck.current.tokens !== preparedUnit.tokens) return;\n    onChangeAnnotations(exportSpanAnnotations(annotations, preparedUnit.tokens, true));\n  }, [preparedUnit.tokens, annotations, onChangeAnnotations]);\n\n  useEffect(() => {\n    if (returnVariableMap) returnVariableMap(variableMap);\n  }, [variableMap, returnVariableMap]);\n\n  useEffect(() => {\n    if (setReady) setReady((current) => current + 1);\n    setAnnotations((state) => ({ ...state })); //trigger DOM update after token refs have been prepared\n  }, [tokensReady, setAnnotations, setReady]);\n\n  if (!preparedUnit.tokens) return null;\n  return (\n    <div style={{ display: \"flex\", height: \"100%\", maxHeight: \"100%\", flexDirection: \"column\" }}>\n      <Tokens\n        tokens={preparedUnit.tokens}\n        text_fields={preparedUnit.text_fields}\n        meta_fields={preparedUnit.meta_fields}\n        setReady={setTokensReady}\n        maxHeight={variables && variables.length > 1 ? \"calc(100% - 60px)\" : \"calc(100% - 30px)\"}\n        editMode={editMode}\n      />\n\n      <SelectVariable\n        variables={variables}\n        variable={variable}\n        setVariable={setVariable}\n        editAll={settings?.editAll}\n        minHeight={variables && variables.length > 1 ? 60 : 30} //'px'\n      />\n      <AnnotateNavigation\n        tokens={preparedUnit.tokens}\n        variableMap={variableMap}\n        annotations={annotations}\n        disableAnnotations={!onChangeAnnotations || !variableMap}\n        editMode={editMode || variable === \"EDIT ALL\"}\n        triggerCodeSelector={triggerCodeSelector}\n        eventsBlocked={codeSelectorOpen || blockEvents}\n        fullScreenNode={fullScreenNode}\n      />\n      {codeSelector || null}\n    </div>\n  );\n};\n\nexport default React.memo(Document);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport QuestionForm from \"./QuestionForm\";\nimport Document from \"../../Document/Document\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { codeBookEdgesToMap, getCodeTreeArray } from \"../../../functions/codebook\";\nimport { Form, Icon, Input, Popup } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\n\nconst documentSettings = {\n  centerVertical: true,\n};\n\nconst QuestionTask = ({ unit, codebook, setUnitIndex, blockEvents, fullScreenNode }) => {\n  const [tokens, setTokens] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [questions, setQuestions] = useState(null);\n  const refs = { text: useRef(), box: useRef(), code: useRef() };\n  const [textReady, setTextReady] = useState(0);\n  const [cookies, setCookie] = useCookies([\"questionTaskSettings\"]);\n  const [settings, setSettings] = useState(\n    cookies.questionTaskSettings || { splitHeight: 60, textSize: 1 }\n  );\n  const divref = useRef(null);\n\n  useEffect(() => {\n    setCookie(\"questionTaskSettings\", JSON.stringify(settings), { path: \"/\" });\n  }, [settings, setCookie]);\n\n  useEffect(() => {\n    if (!codebook?.questions) return;\n    setQuestions(prepareQuestions(codebook));\n  }, [codebook]);\n\n  useEffect(() => {\n    if (!refs?.text.current) return null;\n    refs.box.current.style.backgroundColor = \"white\";\n    refs.text.current.style.transition = ``;\n    refs.box.current.style.transition = ``;\n    refs.box.current.style.opacity = 0;\n    refs.text.current.style.transform = \"translateX(0%) translateY(0%)\";\n  }, [refs.text, refs.box, unit, questionIndex]);\n\n  useEffect(() => {\n    if (!refs?.text.current) return null;\n    refs.box.current.style.transition = `opacity 200ms ease-out`;\n    refs.box.current.style.opacity = 1;\n  }, [textReady, refs.text, refs.box, questionIndex]);\n\n  // swipe controlls need to be up here due to working on the div wrapping the while question screen\n  // use separate swipe for text (document) and menu rows, to disable swiping up\n  // in text (which conflicts with scrolling)\n  const [swipe, setSwipe] = useState(null);\n  const textSwipe = useSwipeable(swipeControl(questions?.[questionIndex], refs, setSwipe, false));\n  const menuSwipe = useSwipeable(swipeControl(questions?.[questionIndex], refs, setSwipe, true));\n\n  if (!unit) return null;\n\n  return (\n    <div ref={divref} style={{ height: \"100%\" }}>\n      <div\n        {...textSwipe}\n        style={{\n          position: \"relative\",\n          border: \"1px solid\",\n          height: `${settings.splitHeight}%`,\n        }}\n      >\n        <div\n          ref={refs.box}\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            overflow: \"hidden\",\n            position: \"absolute\",\n          }}\n        >\n          {/* This div moves around behind the div containing the document to show the swipe code  */}\n          <div\n            ref={refs.code}\n            style={{ padding: \"0.6em 0.3em\", width: \"100%\", fontSize: \"3em\", position: \"absolute\" }}\n          />\n          <div\n            ref={refs.text}\n            style={{\n              border: \"1px solid\",\n              height: \"100%\",\n              width: \"100%\",\n              position: \"absolute\",\n              top: \"0\",\n              backgroundColor: \"white\",\n              overflow: \"hidden\",\n              fontSize: `${settings.textSize}em`,\n            }}\n          >\n            <Document\n              unit={unit}\n              settings={documentSettings}\n              setReady={setTextReady}\n              returnTokens={setTokens}\n              fullScreenNode={fullScreenNode}\n            />\n          </div>\n        </div>\n        <SettingsPopup\n          settings={settings}\n          setSettings={setSettings}\n          fullScreenNode={fullScreenNode}\n        />\n      </div>\n      <div {...menuSwipe} style={{ height: `${100 - settings.splitHeight}%` }}>\n        <QuestionForm\n          unit={unit}\n          tokens={tokens}\n          questions={questions}\n          questionIndex={questionIndex}\n          setQuestionIndex={setQuestionIndex}\n          setUnitIndex={setUnitIndex}\n          swipe={swipe}\n          blockEvents={blockEvents}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst SettingsPopup = ({ settings, setSettings, fullScreenNode }) => {\n  return (\n    <Popup\n      on=\"click\"\n      mountNode={fullScreenNode || undefined}\n      trigger={\n        <Icon\n          size=\"large\"\n          name=\"setting\"\n          style={{\n            position: \"absolute\",\n\n            cursor: \"pointer\",\n            top: \"1px\",\n            left: \"-1px\",\n            color: \"#1b1c1d\",\n            padding: \"5px 0px\",\n            height: \"30px\",\n          }}\n        />\n      }\n    >\n      <Form>\n        <Form.Group grouped>\n          <Form.Field>\n            <label>\n              text window size <font style={{ color: \"blue\" }}>{`${settings.splitHeight}%`}</font>\n            </label>\n            <Input\n              size=\"mini\"\n              step={2}\n              min={20}\n              max={80}\n              type=\"range\"\n              value={settings.splitHeight}\n              onChange={(e, d) => setSettings((state) => ({ ...state, splitHeight: d.value }))}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              text size scaling <font style={{ color: \"blue\" }}>{`${settings.textSize}`}</font>\n            </label>\n            <Input\n              size=\"mini\"\n              step={0.025}\n              min={0.4}\n              max={1.6}\n              type=\"range\"\n              value={settings.textSize}\n              onChange={(e, d) => setSettings((state) => ({ ...state, textSize: d.value }))}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Popup>\n  );\n};\n\nconst prepareQuestions = (codebook) => {\n  const questions = codebook.questions;\n  return questions.map((question) => {\n    const codeMap = codeBookEdgesToMap(question.codes);\n    let cta = getCodeTreeArray(codeMap);\n    cta = addRequiredFor([...cta]);\n    const [options, swipeOptions] = getOptions(cta);\n    return { ...question, options, swipeOptions }; // it's important that this deep copies question\n  });\n};\n\nconst addRequiredFor = (cta) => {\n  // if codebook has a required_for question, check if this code has it. If not, it's the same as this code having\n  // a makes_irrelevant for this question. This way we only need to process the makes_irrelevant logic (which is easier)\n  const haveRequired = cta.reduce((s, code) => {\n    if (!code.required_for) return s;\n    if (typeof code.required_for !== \"object\") {\n      s.add(code.required_for);\n    } else {\n      for (let rf of code.required_for) s.add(rf);\n    }\n    return s;\n  }, new Set());\n\n  for (let code of cta) {\n    for (let hasReq of haveRequired) {\n      if (\n        !code.required_for ||\n        (code.required_for !== hasReq && !code.required_for.includes(hasReq))\n      ) {\n        if (!code.makes_irrelevant.includes(hasReq))\n          code.makes_irrelevant = [...code.makes_irrelevant, hasReq];\n      }\n    }\n  }\n  return cta;\n};\n\nconst getOptions = (cta) => {\n  const options = [];\n  const swipeOptions = {}; // object, for fast lookup in swipeControl\n\n  for (let code of cta) {\n    if (!code.active) continue;\n    if (!code.activeParent) continue;\n    let tree = code.tree.join(\" - \");\n    const option = {\n      code: code.code,\n      tree: tree,\n      makes_irrelevant: code.makes_irrelevant,\n      color: code.color,\n    };\n    if (code.swipe) swipeOptions[code.swipe] = option;\n    options.push(option);\n  }\n  return [options, swipeOptions];\n};\n\nconst swipeControl = (question, refs, setSwipe, alwaysDoVertical, triggerdist = 150) => {\n  if (!question) return {};\n  if (question.type !== \"annotinder\") return {};\n  const transitionTime = 200;\n  // const blockSwipe = useRef()\n\n  const swipeConfig = {\n    delta: 10, // min distance(px) before a swipe starts. *See Notes*\n    preventDefaultTouchmoveEvent: false, // call e.preventDefault *See Details*\n    trackTouch: true, // track touch input\n    trackMouse: false, // track mouse input\n    rotationAngle: 0, // set a rotation angle\n  };\n\n  const getDeltas = (d) => {\n    let deltaX = d.deltaX;\n    let deltaY = d.deltaY;\n    if (Math.abs(deltaX) > Math.abs(deltaY) + 10) deltaY = 0;\n    if (Math.abs(deltaX) < Math.abs(deltaY) + 10) deltaX = 0;\n    if (!alwaysDoVertical) {\n      // the bottom menu always allows vertical upward swipe, but for the\n      // text div we only allow swiping up if scrolled all the way to bottom\n\n      // get the tokensContainer\n      const el = refs.text.current.getElementsByClassName(\"TokensContainer\")[0];\n      const bottom = el.scrollHeight - Math.ceil(el.scrollTop) === el.clientHeight;\n      if (!bottom) deltaY = 0;\n    }\n    return [deltaX, deltaY];\n  };\n\n  return {\n    onSwiping: (d) => {\n      const [deltaX, deltaY] = getDeltas(d);\n      if (deltaX > 0 && !question.swipeOptions.right) return;\n      if (deltaX < 0 && !question.swipeOptions.left) return;\n      if (deltaY < 0 && !question.swipeOptions.up) return;\n      if (deltaY !== 0 && deltaY > 0) return;\n\n      refs.text.current.style.transition = ``;\n      refs.text.current.style.transform = `translateX(${deltaX}px) translateY(${deltaY}px)`;\n\n      let bgc = question.swipeOptions.up?.color;\n      let code = question.swipeOptions.up?.code;\n      let [bottom, talign] = [\"0%\", \"center\"];\n      if (deltaX > 0) {\n        bgc = question.swipeOptions.right?.color;\n        code = question.swipeOptions.right?.code;\n        [bottom, talign] = [\"40%\", \"left\"];\n      }\n      if (deltaX < 0) {\n        bgc = question.swipeOptions.left?.color;\n        code = question.swipeOptions.left?.code;\n        [bottom, talign] = [\"40%\", \"right\"];\n      }\n\n      refs.box.current.style.backgroundColor = bgc;\n      refs.code.current.innerText = code;\n      refs.code.current.style.bottom = bottom;\n      refs.code.current.style.textAlign = talign;\n    },\n    onSwiped: (d) => {\n      const [deltaX, deltaY] = getDeltas(d);\n      if (deltaX > 0 && !question.swipeOptions.right) return;\n      if (deltaX < 0 && !question.swipeOptions.left) return;\n      if (deltaY < 0 && !question.swipeOptions.up) return;\n      if (deltaY !== 0 && deltaY > 0) return;\n\n      refs.text.current.style.transition = `transform ${transitionTime}ms ease-out, opacity ${transitionTime}ms ease-out`;\n\n      if (Math.abs(deltaX) < triggerdist && Math.abs(deltaY) < triggerdist) {\n        refs.text.current.style.transform = `translateX(0%) translateY(0%)`;\n        //refs.box.current.style.backgroundColor = \"white\";\n      } else {\n        refs.text.current.style.transform = `translateX(${\n          deltaX > 0 ? 100 : deltaX < 0 ? -100 : 0\n        }%) translateY(${deltaY > 0 ? 100 : -100}%)`;\n        refs.box.current.style.transition = `opacity ${transitionTime}ms ease-out`;\n        refs.box.current.style.opacity = 0;\n\n        let dir = \"up\";\n        dir = deltaX > 0 ? \"right\" : \"left\";\n        setSwipe(dir);\n        setSwipe(null);\n      }\n    },\n    ...swipeConfig,\n  };\n};\n\nexport default React.memo(QuestionTask);\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport { getColor } from \"../../../functions/tokenDesign\";\n\nconst COLWIDTHS = [4, 4, 2, 2]; // for offset and text\n\nconst AnnotateTable = ({ tokens, variableMap, annotations }) => {\n  if (!variableMap || Object.keys(variableMap).length === 0) return null;\n\n  return (\n    <Table\n      style={{ fontSize: \"10px\", maxHeight: \"100%\", borderRadius: \"0px\" }}\n      fixed\n      role=\"grid\"\n      arioa-labelledby=\"header\"\n      unstackable\n      singleLine\n      compact=\"very\"\n      size=\"small\"\n    >\n      <Table.Header className=\"annotations-thead\" style={{ height: \"40px\" }}>\n        <Table.Row>\n          <Table.HeaderCell title=\"Variable\" width={COLWIDTHS[0]}>\n            Variable\n          </Table.HeaderCell>\n          <Table.HeaderCell title=\"Vale\" width={COLWIDTHS[1]}>\n            Value\n          </Table.HeaderCell>\n          <Table.HeaderCell title=\"Field\" width={COLWIDTHS[2]}>\n            Field\n          </Table.HeaderCell>\n          <Table.HeaderCell title=\"Position\" width={COLWIDTHS[3]}>\n            Position\n          </Table.HeaderCell>\n          <Table.HeaderCell title=\"Text\">Text</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body\n        className=\"annotations-tbody\"\n        style={{ overflow: \"auto\", height: \"calc(100% - 40px)\" }}\n      >\n        {annotationRows(tokens, variableMap, annotations)}\n      </Table.Body>\n    </Table>\n  );\n};\n\nconst annotationRows = (tokens, variableMap, annotations) => {\n  const rows = [];\n  let i = 0;\n\n  const onClick = (span) => {\n    if (!span) return;\n    const token = tokens?.[span[0]];\n    if (token?.triggerCodePopup) token.triggerCodePopup(span);\n  };\n\n  for (const annotation of annotations) {\n    const text = annotation.text || \"\";\n\n    const row = (\n      <AnnotationRow\n        key={i}\n        variable={annotation.variable}\n        variableMap={variableMap}\n        annotation={annotation}\n        onClick={onClick}\n        text={text}\n      />\n    );\n    if (row !== null) rows.push(row);\n    i++;\n  }\n  return rows;\n};\n\nconst AnnotationRow = ({ variable, variableMap, annotation, onClick, text }) => {\n  if (!variableMap?.[annotation.variable]?.codeMap) return null;\n\n  const codeMap = variableMap[variable].codeMap;\n  if (!codeMap?.[annotation.value] || !codeMap[annotation.value].active) return null;\n  const color = getColor(annotation.value, codeMap);\n  const label = codeMap[annotation.value]?.foldToParent\n    ? `${codeMap[annotation.value].foldToParent} - ${annotation.value}`\n    : annotation.value;\n\n  const position = `${annotation.offset}-${annotation.offset + annotation.length}`;\n\n  return (\n    <Table.Row\n      className=\"annotations-tr\"\n      onClick={() => onClick(annotation.token_span)}\n      style={{ cursor: \"pointer\" }}\n    >\n      <Table.Cell width={COLWIDTHS[0]}>\n        <span title={variable}>{variable}</span>\n      </Table.Cell>\n\n      <Table.Cell title={label} width={COLWIDTHS[1]} style={color ? { background: color } : null}>\n        <span title={label}>{label}</span>\n      </Table.Cell>\n      <Table.Cell title={annotation.field} width={COLWIDTHS[2]}>\n        {annotation.field}\n      </Table.Cell>\n      <Table.Cell title={position} width={COLWIDTHS[3]}>\n        {position}\n      </Table.Cell>\n      <Table.Cell>\n        <span title={text}>{text}</span>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default AnnotateTable;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Container,\n  Grid,\n  List,\n  ListItem,\n  Table,\n  Button,\n  Modal,\n  Popup,\n  Form,\n  Input,\n} from \"semantic-ui-react\";\nimport AnnotateTable from \"./AnnotateTable\";\nimport Document from \"../../Document/Document\";\nimport { useCookies } from \"react-cookie\";\n\nconst AnnotateTask = ({ unit, codebook, setUnitIndex, blockEvents, fullScreenNode }) => {\n  const [annotations, setAnnotations] = useAnnotations(unit);\n  const [variableMap, setVariableMap] = useState(null);\n  const [cookies, setCookie] = useCookies([\"annotateTaskSettings\"]);\n  const [settings, setSettings] = useState(cookies.annotateTaskSettings || { textSize: 1 });\n  const [tokens, setTokens] = useState(null);\n\n  useEffect(() => {\n    setCookie(\"annotateTaskSettings\", JSON.stringify(settings), { path: \"/\" });\n  }, [settings, setCookie]);\n\n  if (!unit || codebook?.variables === null) return null;\n\n  return (\n    <Grid\n      centered\n      stackable\n      style={{ height: \"100%\", width: \"100%\", paddingTop: \"0\" }}\n      verticalAlign={\"top\"}\n      columns={2}\n    >\n      <Grid.Column width={10} style={{ paddingRight: \"0em\", paddingTop: \"0\", height: \"100%\" }}>\n        <Button.Group fluid style={{ padding: \"0\", height: \"40px\" }}>\n          <SettingsPopup\n            settings={settings}\n            setSettings={setSettings}\n            fullScreenNode={fullScreenNode}\n          />\n          <UserManual fullScreenNode={fullScreenNode} />\n          <NextUnitButton unit={unit} annotations={annotations} setUnitIndex={setUnitIndex} />\n        </Button.Group>\n        <div style={{ height: \"calc(100% - 20px\", fontSize: `${settings.textSize}em` }}>\n          <Document\n            unit={unit}\n            settings={codebook?.settings}\n            variables={codebook?.variables}\n            onChangeAnnotations={setAnnotations}\n            returnTokens={setTokens}\n            returnVariableMap={setVariableMap}\n            blockEvents={blockEvents}\n            fullScreenNode={fullScreenNode}\n          />\n        </div>\n      </Grid.Column>\n      <Grid.Column\n        width={6}\n        style={{\n          paddingRight: \"0em\",\n          padding: \"0\",\n          height: \"100%\",\n          paddingLeft: \"10px\",\n        }}\n      >\n        <div style={{ borderBottom: \"1px solid\", height: \"calc(100%)\", overflow: \"auto\" }}>\n          <AnnotateTable tokens={tokens} variableMap={variableMap} annotations={annotations} />\n        </div>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst useAnnotations = (unit) => {\n  // simple hook for onChangeAnnotations that posts to server and returns state\n  const [annotations, setAnnotations] = useState([]);\n  const safeWrite = useRef(null);\n  //const hasChanged = useRef(false);\n\n  useEffect(() => {\n    if (!unit) {\n      setAnnotations([]);\n      return;\n    }\n    safeWrite.current = unit.unitId;\n    //hasChanged.current = false;\n    setAnnotations(unit.annotations || []);\n    // if (!unit.annotations || unit.annotations.length === 0)\n    //   unit.jobServer.postAnnotations(unit.unitId, [], \"IN_PROGRESS\");\n  }, [unit, setAnnotations]);\n\n  const onChangeAnnotations = React.useCallback(\n    (newAnnotations) => {\n      if (unit.unitId !== safeWrite.current) return;\n      setAnnotations(newAnnotations);\n      const cleanAnnotations = getCleanAnnotations(newAnnotations);\n      if (!annotationsHaveChanged(unit.annotations, cleanAnnotations)) return;\n      unit.jobServer.postAnnotations(unit.unitId, cleanAnnotations, \"IN_PROGRESS\");\n    },\n    [unit]\n  );\n\n  return [annotations, onChangeAnnotations];\n};\n\nconst annotationsHaveChanged = (old, current) => {\n  if (old.length !== current.length) return true;\n  const compareOn = [\"variable\", \"value\", \"field\", \"offset\", \"length\"];\n  for (let i = 0; i < old.length; i++) {\n    for (let field of compareOn) {\n      if (old[i]?.[field] !== current[i]?.[field]) return true;\n    }\n  }\n  return false;\n};\n\nconst getCleanAnnotations = (annotations) => {\n  return annotations.map((na) => {\n    return {\n      variable: na.variable,\n      value: na.value,\n      field: na.field,\n      offset: na.offset,\n      length: na.length,\n    };\n  });\n};\n\nconst NextUnitButton = ({ unit, annotations, setUnitIndex }) => {\n  const [tempDisable, setTempDisable] = useState(false);\n\n  const onNext = () => {\n    if (tempDisable) return;\n\n    // write DONE status\n    unit.jobServer.postAnnotations(unit.unitId, getCleanAnnotations(annotations), \"DONE\");\n\n    setTempDisable(true);\n    setUnitIndex((state) => state + 1);\n    setTimeout(() => {\n      setTempDisable(false);\n    }, 1000);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.ctrlKey && e.keyCode === 13) {\n      e.preventDefault();\n      onNext();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  });\n\n  return (\n    <Button disabled={tempDisable} loading={tempDisable} primary size=\"tiny\" onClick={onNext}>\n      Next Unit\n    </Button>\n  );\n};\n\nconst UserManual = ({ fullScreenNode }) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Modal\n      mountNode={fullScreenNode || undefined}\n      flowing\n      open={open}\n      onClose={() => setOpen(false)}\n      position=\"bottom left\"\n      trigger={\n        <Button secondary size=\"tiny\" onClick={() => setOpen(!open)}>\n          Controls\n        </Button>\n      }\n    >\n      <Modal.Header>Controls</Modal.Header>\n      <Modal.Content>\n        <Container\n          style={{\n            overflow: \"auto\",\n            paddingTop: \"2em\",\n            width: \"100%\",\n            maxWidth: \"700px\",\n          }}\n        >\n          <Table structured compact basic=\"very\" unstackable>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={3}></Table.HeaderCell>\n                <Table.HeaderCell>Keyboard</Table.HeaderCell>\n                <Table.HeaderCell>Mouse</Table.HeaderCell>\n                <Table.HeaderCell>Touchpad</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  <strong>Navigate</strong>\n                </Table.Cell>\n                <Table.Cell>\n                  <i>Arrow keys</i>\n                </Table.Cell>\n                <Table.Cell></Table.Cell>\n                <Table.Cell></Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <strong>Select words</strong>\n                </Table.Cell>\n                <Table.Cell>\n                  <i>spacebar</i>\n                  <br />\n                  Hold to select mutiple\n                </Table.Cell>\n                <Table.Cell>\n                  <i>Left-click</i>\n                  <br />\n                  Hold to select multiple\n                </Table.Cell>\n                <Table.Cell>\n                  <i>tab</i> twice to begin, then once to close\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <strong>Edit/remove code</strong>\n                </Table.Cell>\n                <Table.Cell colSpan=\"3\">\n                  Select annotated words to overwrite or delete the code\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <strong>\n                    Select variable\n                    <br />\n                    (if multiple)\n                  </strong>\n                </Table.Cell>\n                <Table.Cell>\n                  Next with <i>tab</i>, previous with <i>shift+tab</i>\n                </Table.Cell>\n                <Table.Cell colSpan=\"2\">Use the buttons</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>\n                  <strong>Next unit</strong>\n                </Table.Cell>\n                <Table.Cell>\n                  <i>ctrl+Enter</i>\n                </Table.Cell>\n                <Table.Cell colSpan=\"2\">Use the next unit button</Table.Cell>\n              </Table.Row>\n              {/* <Table.Row>\n              <Table.Cell>\n                <strong>\n                  Browse units\n                  <br />\n                  (if allowed)\n                </strong>\n              </Table.Cell>\n              <Table.Cell>\n                Press or hold <i>ctrl+Enter</i> (forward) or <i>ctrl+backspace</i> (backward)\n              </Table.Cell>\n              <Table.Cell>back and next buttons (top-left)</Table.Cell>\n              <Table.Cell>back and next buttons (top-left)</Table.Cell>\n            </Table.Row> */}\n            </Table.Body>\n            <Table.Footer>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <strong>Quick keys</strong> <br />\n                  in popup\n                </Table.HeaderCell>\n                <Table.HeaderCell colSpan=\"3\">\n                  <List as=\"ul\">\n                    <ListItem as=\"li\">\n                      <i>text input</i> automatically opens dropdown{\" \"}\n                    </ListItem>\n                    <ListItem as=\"li\">\n                      navigate buttons with <i>arrow keys</i>, select with <i>spacebar</i>\n                    </ListItem>\n                    <ListItem as=\"li\">\n                      use <i>escape</i> to close popup and <i>delete</i> to remove code\n                    </ListItem>\n                  </List>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Container>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button content=\"Close\" onClick={() => setOpen(false)} positive />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nconst SettingsPopup = ({ settings, setSettings, fullScreenNode }) => {\n  return (\n    <Popup\n      on=\"click\"\n      mountNode={fullScreenNode || undefined}\n      trigger={\n        <Button\n          secondary\n          width={1}\n          size=\"large\"\n          icon=\"setting\"\n          style={{\n            color: \"white\",\n            maxWidth: \"50px\",\n          }}\n        />\n      }\n    >\n      <Form>\n        <Form.Group grouped>\n          <Form.Field>\n            <label>\n              text size scaling <font style={{ color: \"blue\" }}>{`${settings.textSize}`}</font>\n            </label>\n            <Input\n              size=\"mini\"\n              step={0.025}\n              min={0.4}\n              max={1.6}\n              type=\"range\"\n              value={settings.textSize}\n              onChange={(e, d) => setSettings((state) => ({ ...state, textSize: d.value }))}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Popup>\n  );\n};\n\nexport default React.memo(AnnotateTask);\n","import React from \"react\";\nimport QuestionTask from \"./QuestionTask\";\nimport AnnotateTask from \"./AnnotateTask\";\n\nconst Task = ({ unit, setUnitIndex, fullScreenNode }) => {\n  const codebook = unit?.jobServer?.codebook;\n  console.log(codebook);\n  if (!codebook || !unit) return null;\n\n  const renderTaskPreview = (type) => {\n    switch (type) {\n      case \"questions\":\n        return (\n          <QuestionTask\n            unit={unit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            fullScreenNode={fullScreenNode}\n          />\n        );\n      case \"annotate\":\n        return (\n          <AnnotateTask\n            unit={unit}\n            codebook={codebook}\n            setUnitIndex={setUnitIndex}\n            fullScreenNode={fullScreenNode}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (!codebook?.type) return null;\n  return renderTaskPreview(codebook.type);\n};\n\nexport default Task;\n","import React, { useState, useEffect } from \"react\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { Icon, Modal, Button } from \"semantic-ui-react\";\n\nexport const FullScreenWindow = ({ children }) => {\n  const fsHandle = useFullScreenHandle();\n  const fullScreenButton = <FullScreenButton handle={fsHandle} />;\n\n  return (\n    <FullScreen handle={fsHandle}>\n      <DOMNodeProvider style={{ height: \"100%\" }}>\n        {(fullScreenNode) => {\n          // FullScreenFix children should be called as a function to pass on the fullScreenNode argument\n          return (\n            <>\n              <AskFullScreenModal handle={fsHandle} />\n              {children(fullScreenNode, fullScreenButton)}\n            </>\n          );\n        }}\n      </DOMNodeProvider>\n    </FullScreen>\n  );\n};\n\nconst DOMNodeProvider = ({ children }) => {\n  // due to a bug in react-full-screen, pass on a 'fullScreenNode', which tells the popup\n  // where to mount.\n  // https://github.com/Semantic-Org/Semantic-UI-React/issues/4191\n  const [fullScreenNode, setFullScreenNode] = useState(null);\n\n  return (\n    <div className=\"dom-node-provider\" ref={setFullScreenNode}>\n      {children(fullScreenNode)}\n    </div>\n  );\n};\n\nconst AskFullScreenModal = ({ handle }) => {\n  let [askFullscreen, setAskFullscreen] = useState(true);\n\n  useEffect(() => {\n    // this used to have location as dep\n    setAskFullscreen(true);\n  }, [setAskFullscreen, handle]);\n\n  // Disable for now. Seems to not work in Apple devices\n  //askFullscreen = false;\n\n  return (\n    <Modal open={askFullscreen}>\n      <Modal.Header>Fullscreen mode</Modal.Header>\n      <Modal.Content>\n        <p>\n          We recommend working in fullscreen, especially on mobile devices. You can always change\n          this with the button in the top-right corner. For some devices fullscreen might not work.\n        </p>\n        <div style={{ display: \"flex\", height: \"30%\" }}>\n          <Button\n            primary\n            size=\"massive\"\n            onClick={() => {\n              if (!handle.active) handle.enter();\n              setAskFullscreen(false);\n            }}\n            style={{ flex: \"1 1 auto\" }}\n          >\n            Fullscreen\n          </Button>\n          <Button\n            secondary\n            size=\"massive\"\n            onClick={() => {\n              if (handle.active) handle.exit();\n              setAskFullscreen(false);\n            }}\n            style={{ flex: \"1 1 auto\" }}\n          >\n            Windowed\n          </Button>\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst FullScreenButton = ({ handle }) => {\n  return (\n    <Icon.Group\n      size=\"big\"\n      style={{ paddingRight: \"10px\", position: \"absolute\", top: \"0px\", right: 0 }}\n    >\n      <Icon\n        link\n        name={handle.active ? \"compress\" : \"expand\"}\n        onClick={() => {\n          handle.active ? handle.exit() : handle.enter();\n        }}\n      />\n    </Icon.Group>\n  );\n};\n\nexport default FullScreenWindow;\n","import React, { useState, useEffect } from \"react\";\nimport { Icon, Grid, Header } from \"semantic-ui-react\";\nimport DownloadAnnotations from \"./components/DownloadAnnotations\";\nimport IndexController from \"./components/IndexController\";\nimport Task from \"./components/Task\";\nimport FullScreenWindow from \"./components/FullScreenWindow\";\nimport \"./annotatorStyle.css\";\n\n/**\n * Render an annotator for the provided jobServer class\n *\n * @param {*} jobServer  A jobServer class\n */\nconst Annotator = ({ jobServer }) => {\n  const [unitIndex, setUnitIndex] = useState(-1);\n  const [preparedUnit, setPreparedUnit] = useState(null);\n\n  useEffect(() => {\n    // on start (or jobserver changes), unitIndex based on progress\n    setUnitIndex(jobServer.progress.n_coded);\n  }, [jobServer, setUnitIndex]);\n\n  useEffect(() => {\n    // When unitIndex changes, get the unit\n    if (!jobServer || unitIndex === null) return;\n    getUnit(jobServer, unitIndex, setPreparedUnit, setUnitIndex);\n  }, [unitIndex, jobServer, setUnitIndex, setPreparedUnit]);\n\n  const content = (fullScreenNode) => {\n    if (unitIndex < 0) return null;\n    if (unitIndex === null) return <Finished jobServer={jobServer} />;\n    return <Task unit={preparedUnit} setUnitIndex={setUnitIndex} fullScreenNode={fullScreenNode} />;\n  };\n\n  const [maxHeight, maxWidth] = getWindowSize(jobServer);\n\n  return (\n    <FullScreenWindow>\n      {(fullScreenNode, fullScreenButton) => (\n        // FullScreenWindow passes on the fullScreenNode needed to mount popups, and a fullScreenButton to handle on/off\n        <div\n          style={{\n            maxWidth,\n            maxHeight,\n            background: \"white\",\n            margin: \"0 auto\",\n            padding: \"0\",\n            height: \"100%\",\n            border: \"1px solid white\",\n          }}\n        >\n          <div style={{ height: \"45px\", padding: \"0\", position: \"relative\" }}>\n            <div style={{ width: \"85%\", paddingLeft: \"7.5%\" }}>\n              <IndexController\n                n={jobServer?.progress.n_total}\n                index={unitIndex}\n                setIndex={setUnitIndex}\n                canGoBack={jobServer?.progress.seek_backwards}\n                canGoForward={jobServer?.progress.seek_forwards}\n              />\n            </div>\n            <div>{fullScreenButton}</div>\n          </div>\n          <div style={{ height: \"calc(100% - 45px)\", padding: \"0\" }}>{content(fullScreenNode)}</div>\n        </div>\n      )}\n    </FullScreenWindow>\n  );\n};\n\nconst getUnit = async (jobServer, unitIndex, setPreparedUnit, setUnitIndex) => {\n  if (unitIndex < 0) return;\n  try {\n    const unit = await jobServer.getUnit(unitIndex);\n    setPreparedUnit({\n      jobServer,\n      unitId: unit.id,\n      ...unit.unit,\n      annotations: unit.annotation,\n      status: unit.status,\n    });\n  } catch (e) {\n    if (e.response?.status === 404) setUnitIndex(null);\n    setPreparedUnit(null);\n    console.log(e);\n  }\n};\n\nconst getWindowSize = (jobServer) => {\n  switch (jobServer?.codebook?.type) {\n    case \"questions\":\n      return [\"800px\", \"1000px\"];\n    case \"annotate\":\n      return [\"2000px\", \"2000px\"];\n    default:\n      return [\"100%\", \"100%\"];\n  }\n};\n\nconst Finished = ({ jobServer }) => {\n  if (!jobServer) return null;\n\n  if (!jobServer.getAllAnnotations) {\n    return (\n      <Grid container centered verticalAlign=\"middle\" style={{ margin: \"0\", padding: \"0\" }}>\n        <Grid.Row style={{ marginTop: \"40%\" }}>\n          <div>\n            <Icon name=\"flag checkered\" size=\"huge\" style={{ transform: \"scale(5)\" }} />\n          </div>\n        </Grid.Row>\n      </Grid>\n    );\n  } else {\n    return (\n      <Grid container centered verticalAlign=\"middle\" style={{ margin: \"0\", padding: \"0\" }}>\n        <Grid.Row style={{ marginTop: \"40%\" }}>\n          <Grid.Column width={4}>\n            <Icon name=\"flag checkered\" size=\"huge\" style={{ transform: \"scale(1)\" }} />\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Header>You finished the codingjob!</Header>\n            <p>Please download your results and send them to whoever gave you this job. </p>\n            <DownloadAnnotations jobServer={jobServer} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n};\n\nexport default Annotator;\n","import Axios from \"axios\";\n\nexport async function passwordLogin(host, email, password) {\n  const response = await Axios.get(`${host}/token`, {\n    auth: { username: email, password: password },\n  });\n  return response.data.token;\n}\n\nclass Backend {\n  constructor(host, email, token) {\n    this.host = host;\n    this.email = email;\n    this.token = token;\n    this.api = Axios.create({\n      baseURL: host,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  async init() {\n    try {\n      await this.getToken();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // GET\n  async getJobs() {\n    const res = await this.api.get(\"/codingjobs\");\n    return res.data;\n  }\n  async getToken() {\n    const res = await this.api.get(\"/token\");\n    return res.data;\n  }\n  async getCodebook(job_id) {\n    const res = await this.api.get(`/codingjob/${job_id}/codebook`);\n    return res.data;\n  }\n  async getProgress(job_id) {\n    const res = await this.api.get(`/codingjob/${job_id}/progress`);\n    return res.data;\n  }\n  async getUnit(job_id, i) {\n    let path = `/codingjob/${job_id}/unit`;\n    if (i !== null) path += `?index=${i}`;\n    const res = await this.api.get(path);\n    return res.data;\n  }\n  async getCodingjob(job_id) {\n    const res = await this.api.get(`/codingjob/${job_id}`);\n    return res.data;\n  }\n\n  // POST\n  postCodingjob(codingjobPackage, title) {\n    codingjobPackage.title = title;\n\n    return this.api.post(`/codingjob`, {\n      title: title,\n      units: codingjobPackage.units,\n      codebook: codingjobPackage.codebook,\n      provenance: codingjobPackage.provenance,\n      rules: codingjobPackage.rules,\n    });\n  }\n  postAnnotation(job_id, unit_id, annotation, status) {\n    const data = { annotation, status };\n    this.api.post(`/codingjob/${job_id}/unit/${unit_id}/annotation`, data);\n  }\n}\n\nexport default Backend;\n","import React, { useEffect, useState } from \"react\";\nimport Backend, { passwordLogin } from \"../../classes/Backend\";\nimport { Header, Form, Button, Segment, Grid, Divider } from \"semantic-ui-react\";\nimport { useCookies } from \"react-cookie\";\n\nconst useBackend = (urlHost) => {\n  const [cookies, setCookies] = useCookies([\"backend\"]);\n  const [backend, setBackend] = useState(null);\n\n  useEffect(() => {\n    // First check for host in URL, if missing, check for host in cookies.\n    const host = urlHost || cookies?.backend?.host || null;\n    console.log(host);\n    console.log(backend?.host);\n    if (host && backend?.host && host !== backend?.host) {\n      setBackend(null); // reset backend if host changes\n      return;\n    }\n    if (!cookies?.backend?.token) {\n      setBackend(null);\n      return;\n    }\n    if (backend || !host || !cookies?.backend?.token) return;\n    logIn(cookies, setCookies, setBackend);\n  }, [cookies, backend, urlHost, setCookies, setBackend]);\n\n  return [backend, <LoginForm host={urlHost || cookies?.backend?.host || null} />];\n};\n\nconst logIn = async (cookies, setCookies, setBackend) => {\n  const backend = new Backend(\n    cookies?.backend?.host,\n    cookies?.backend?.email,\n    cookies?.backend?.token\n  );\n  try {\n    // maybe add check for specific user later. For now just check if can get token\n    await backend.init();\n    setBackend(backend);\n  } catch (e) {\n    console.log(e);\n    setBackend(null);\n    setCookies(\"backend\", JSON.stringify({ ...backend, token: null }), { path: \"/\" });\n  }\n};\n\nexport const LoginForm = ({ host = null }) => {\n  const [cookies, setCookies] = useCookies([\"backend\"]);\n\n  const backend = cookies.backend || {\n    host: \"http://localhost:5000\",\n    email: \"test@user.com\",\n    token: null,\n  };\n\n  if (host) backend.host = host;\n\n  const setLogin = (value) => {\n    setCookies(\"backend\", JSON.stringify(value), { path: \"/\" });\n  };\n  const setLogout = () => {\n    setCookies(\"backend\", JSON.stringify({ ...backend, token: null }), { path: \"/\" });\n  };\n\n  if (backend.token) return <SignOut backend={backend} setLogout={setLogout} />;\n  return <SignIn backend={backend} setLogin={setLogin} />;\n};\n\nconst SignOut = ({ backend, setLogout }) => {\n  return (\n    <>\n      <Grid textAlign=\"center\">\n        <Grid.Column>\n          <Button secondary onClick={setLogout}>\n            Sign out from <span style={{ color: \"lightblue\" }}>{backend.email}</span>\n          </Button>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n};\n\nconst SignIn = ({ backend, setLogin }) => {\n  const [host, setHost] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidPassword, setInvalidPassword] = useState(false);\n\n  const tryPasswordLogin = async () => {\n    setPassword(\"\");\n    try {\n      const token = await passwordLogin(host, email, password);\n      setLogin({ host, email, token });\n    } catch (e) {\n      setInvalidPassword(true);\n      console.log(e);\n    }\n  };\n\n  const emailError = !email.match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n\n  useEffect(() => {\n    if (backend?.email) setEmail(backend.email);\n    if (backend?.host) setHost(backend.host);\n  }, [backend]);\n\n  return (\n    <>\n      <Header icon=\"user\" content=\"Register or sign in\" />\n\n      <Segment placeholder attached=\"bottom\">\n        <Grid stackable textAlign=\"center\">\n          <Grid.Row>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  placeholder=\"Host\"\n                  name=\"host\"\n                  label=\"Host\"\n                  value={host}\n                  onChange={(e, d) => {\n                    if (d.value.length < 100) setHost(d.value);\n                  }}\n                  icon=\"home\"\n                  iconPosition=\"left\"\n                  autoFocus\n                />\n                <Form.Input\n                  placeholder=\"email adress\"\n                  error={emailError ? \"Please enter a valid email adress\" : false}\n                  name=\"email\"\n                  label=\"Email\"\n                  icon=\"mail\"\n                  iconPosition=\"left\"\n                  value={email}\n                  onChange={(e, d) => {\n                    if (d.value.length < 100) setEmail(d.value);\n                  }}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Divider />\n        <Grid columns={2} textAlign=\"center\">\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column>\n              <Form>\n                <Button circular primary fluid style={{ width: \"7em\", height: \"7em\" }}>\n                  Login by email (not yet functional)\n                </Button>\n              </Form>\n            </Grid.Column>\n            <Divider vertical>Or</Divider>\n            <Grid.Column>\n              <Form>\n                <Form.Input\n                  placeholder=\"password\"\n                  name=\"password\"\n                  error={invalidPassword ? \"Invalid password for this host & email\" : false}\n                  label=\"Password\"\n                  type=\"password\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  value={password}\n                  onChange={(e, d) => {\n                    setInvalidPassword(false);\n                    setPassword(d.value);\n                  }}\n                />\n                <Button disabled={password.length === 0} primary fluid onClick={tryPasswordLogin}>\n                  Sign in\n                </Button>\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </>\n  );\n};\n\nexport default useBackend;\n","class JobServerAPI {\n  constructor(backend, job_id) {\n    this.backend = backend;\n    this.job_id = job_id;\n    this.where = \"remote\";\n  }\n\n  async init() {\n    try {\n      this.codebook = await this.backend.getCodebook(this.job_id);\n      this.progress = await this.backend.getProgress(this.job_id);\n    } catch (e) {\n      console.log(e);\n      this.success = false;\n      return;\n    }\n    this.success = true;\n  }\n\n  async getUnit(i) {\n    const getNext = i >= this.progress.n_coded && !this.progress.seek_forwards;\n    this.progress.n_coded = Math.max(i, this.progress.n_coded);\n    return await this.backend.getUnit(this.job_id, getNext ? null : i);\n  }\n\n  postAnnotations(unit_id, annotation, status) {\n    this.backend.postAnnotation(this.job_id, unit_id, annotation, status);\n  }\n}\n\nexport default JobServerAPI;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Pagination, Table, Icon } from \"semantic-ui-react\";\n\nconst PAGESIZE = 10;\nconst columns = [\n  { name: \"title\" },\n  { name: \"progress\", f: (row) => `${row.n_coded || 0} / ${row.n_total}` },\n  { name: \"modified\" },\n];\n\nconst JobsTable = ({ backend, setJobId }) => {\n  const [jobs, setJobs] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if (!backend) {\n      setJobs(null);\n    } else\n      backend.getJobs().then((d) => {\n        if (isSubscribed) setJobs(d.jobs);\n      });\n    return () => (isSubscribed = false);\n  }, [backend]);\n\n  const onClick = (rowObj) => {\n    history.push(\"?url=\" + backend.host + `/codingjob/${rowObj.id}`);\n    setJobId(rowObj.id);\n  };\n\n  const started = jobs ? jobs.filter((j) => j.modified !== \"NEW\") : [];\n  const newjobs = jobs ? jobs.filter((j) => j.modified === \"NEW\") : [];\n  return <FullDataTable fullData={[...started, ...newjobs]} columns={columns} onClick={onClick} />;\n};\n\n/**\n * PaginationTable wrapper for if the full data is already in memory\n */\nconst FullDataTable = ({ fullData, columns, onClick }) => {\n  const [data, setData] = useState([]);\n  const [pages, setPages] = useState(1);\n\n  const pageChange = (activePage) => {\n    const offset = (activePage - 1) * PAGESIZE;\n    const newdata = fullData.slice(offset, offset + PAGESIZE);\n    setData(newdata);\n  };\n\n  useEffect(() => {\n    if (!fullData) {\n      setData([]);\n      return null;\n    }\n    const n = fullData.length;\n    setPages(Math.ceil(n / PAGESIZE));\n    let newdata = [];\n    if (n > 0) newdata = fullData.slice(0, PAGESIZE);\n    setData(newdata);\n  }, [fullData]);\n\n  if (!data) return;\n\n  return (\n    <PaginationTable\n      data={data}\n      pages={pages}\n      columns={columns}\n      pageChange={pageChange}\n      onClick={onClick}\n    />\n  );\n};\n\n/**\n * A nice table with pagination\n * @param {array} data an Array with data for a single page\n * @param {array} columns an Array with objects indicating which columns to show and how\n * @param {int} pages the number of pages\n * @param {function} pageChange the function to perform on pagechange. Gets pageindex as an argument, and should update data\n * @returns\n */\nconst PaginationTable = ({ data, columns, pages, pageChange, onClick }) => {\n  const createHeaderRow = (data, columns) => {\n    return columns.map((col, i) => {\n      return (\n        <Table.HeaderCell key={i} width={col.width || null}>\n          <span title={col.name}>{col.name}</span>\n        </Table.HeaderCell>\n      );\n    });\n  };\n\n  const createBodyRows = (data) => {\n    return data.map((rowObj, i) => {\n      return (\n        <Table.Row key={i} style={{ cursor: \"pointer\" }} onClick={() => onClick(rowObj)}>\n          {createRowCells(rowObj)}\n        </Table.Row>\n      );\n    });\n  };\n\n  const createRowCells = (rowObj) => {\n    return columns.map((column, i) => {\n      if (column.hide) return null;\n\n      let content;\n      if (column.f) {\n        content = column.f(rowObj);\n      } else {\n        content = rowObj ? rowObj[column.name] : null;\n      }\n      if (content instanceof Date) content = content.toISOString().slice(0, 19).replace(/T/g, \" \");\n      return (\n        <Table.Cell key={i}>\n          <span title={content}>{content}</span>\n        </Table.Cell>\n      );\n    });\n  };\n  if (data.length < 1) return null;\n\n  return (\n    <Container>\n      <Table\n        unstackable\n        selectable\n        fixed\n        compact\n        singleLine\n        size=\"small\"\n        style={{ fontSize: \"10px\" }}\n      >\n        <Table.Header>\n          <Table.Row>{createHeaderRow(data, columns)}</Table.Row>\n        </Table.Header>\n        <Table.Body>{createBodyRows(data)}</Table.Body>\n        <Table.Footer>\n          <Table.Row>\n            <Table.HeaderCell colSpan={columns.length}>\n              {pages > 1 ? (\n                <Pagination\n                  size=\"mini\"\n                  floated=\"right\"\n                  boundaryRange={1}\n                  siblingRange={1}\n                  ellipsisItem={{\n                    content: <Icon name=\"ellipsis horizontal\" />,\n                    icon: true,\n                  }}\n                  firstItem={{\n                    content: <Icon name=\"angle double left\" />,\n                    icon: true,\n                  }}\n                  lastItem={{\n                    content: <Icon name=\"angle double right\" />,\n                    icon: true,\n                  }}\n                  prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                  nextItem={{\n                    content: <Icon name=\"angle right\" />,\n                    icon: true,\n                  }}\n                  pointing\n                  secondary\n                  defaultActivePage={1}\n                  totalPages={pages}\n                  onPageChange={(e, d) => pageChange(d.activePage)}\n                ></Pagination>\n              ) : null}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Container>\n  );\n};\n\nexport default JobsTable;\n","import React, { useState, useEffect } from \"react\";\nimport Annotator from \"../Annotator/Annotator\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport useBackend from \"./useBackend\";\nimport JobServerAPI from \"../../classes/JobServerAPI\";\nimport JobsTable from \"./JobsTable\";\nimport { useLocation } from \"react-router-dom\";\n\n//   http://localhost:3000/CCS_annotator#/annotator?url=http://localhost:5000/codingjob/25\n\n// NOTE TO SELF\n// Add option to code without having to log in (needs to happen in backend too)\n// Then when coders first check in, they need to either give their email-adress OR say \"stay anonymous\"\n// Codingjobs can then specify whether stay anonymous is allowed, and whether registration is required.\n\nconst AnnotatorAPIClient = () => {\n  const location = useLocation();\n  const [urlHost, urlJobId, setJobId] = useParseUrl(location);\n  const [backend, loginForm] = useBackend(urlHost);\n  const jobServer = useJobServerBackend(backend, urlJobId);\n\n  if (!backend)\n    // If backend isn't connected, show login screen\n    // If the url contained a host, this field is fixed\n    return (\n      <Grid inverted textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: \"500px\" }}>{loginForm}</Grid.Column>\n      </Grid>\n    );\n\n  if (!jobServer) {\n    // if backend is connected, but there is no jobServer (because no job_id was passed in the url)\n    // show a screen with some relevant info for the user on this host. Like current / new jobs\n    return <JobOverview backend={backend} setJobId={setJobId} loginForm={loginForm} />;\n  }\n\n  if (jobServer.job_id !== urlJobId) return null;\n  return <Annotator jobServer={jobServer} />;\n};\n\nconst JobOverview = ({ backend, setJobId, loginForm }) => {\n  return (\n    <Grid\n      inverted\n      textAlign=\"center\"\n      style={{ height: \"100vh\", maxHeight: \"800px\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column width=\"16\" style={{ maxWidth: \"500px\" }}>\n        <Grid.Row>\n          <Header>\n            <Icon name=\"home\" />\n            {backend.host}\n          </Header>\n          {loginForm}\n        </Grid.Row>\n        <br />\n        <Grid.Row>\n          <JobsTable backend={backend} setJobId={setJobId} />\n        </Grid.Row>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst useJobServerBackend = (backend, jobId) => {\n  const [jobServer, setJobServer] = useState(null);\n\n  useEffect(() => {\n    if (!backend || !jobId) {\n      setJobServer(null);\n      return;\n    }\n    setJobServer(null);\n    const js = new JobServerAPI(backend, jobId);\n    js.init().then(() => setJobServer(js)); // add a check for if job_id is invalid\n  }, [backend, jobId]);\n\n  return jobServer;\n};\n\n/**\n * look for the query parameter url  (?url = ...)\n  /if it exists, return the origin/host and the last part of the path (which should be the job_id)\n * @param {*} href from window.location.href\n * @returns \n */\nconst useParseUrl = (location) => {\n  const [host, setHost] = useState();\n  const [jobId, setJobId] = useState();\n\n  useEffect(() => {\n    if (!location.search) {\n      setHost(null);\n      setJobId(null);\n      return;\n    }\n    const href = location.search.replace(\"%colon%\", \":\"); // hack for issue with QR code URLs\n    const params = href.split(\"?\")?.[1];\n    if (!params) return [null, null];\n\n    const parts = params.split(\"&\");\n    const queries = parts.reduce((obj, part) => {\n      const [key, value] = part.split(\"=\");\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n      return obj;\n    }, {});\n    if (!queries.url) return [null, null];\n\n    const url = new URL(queries.url);\n    setHost(url.origin);\n    setJobId(url.pathname.split(\"/\").slice(-1)[0]);\n  }, [setHost, setJobId, location]);\n\n  return [host, jobId];\n};\n\nexport default AnnotatorAPIClient;\n","import React from \"react\";\n\n// Main pages. Use below in items to include in header menu\nimport { HashRouter } from \"react-router-dom\";\nimport AnnotatorAPIClient from \"lib/components/AnnotatorAPIClient/AnnotatorAPIClient\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div style={{ height: \"100vh\", width: \"100vw\" }}>\n        <AnnotatorAPIClient />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}